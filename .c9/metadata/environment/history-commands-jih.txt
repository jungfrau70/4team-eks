{"filter":false,"title":"history-commands-jih.txt","tooltip":"/history-commands-jih.txt","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":2321,"column":11},"action":"remove","lines":["    1  ls -al","    2  aws sts get-caller-identity","    3  exit","    4  pip3 install --user --upgrade boto3","    5  export instance_id=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)","    6  python -c \"import boto3","    7  import os","    8  from botocore.exceptions import ClientError ","    9  ec2 = boto3.client('ec2')","   10  volume_info = ec2.describe_volumes(","   11      Filters=[","   12          {","   13              'Name': 'attachment.instance-id',","   14              'Values': [","   15                  os.getenv('instance_id')","   16              ]","   17          }","   18      ]","   19  )","   20  volume_id = volume_info['Volumes'][0]['VolumeId']","   21  try:","   22      resize = ec2.modify_volume(    ","   23              VolumeId=volume_id,    ","   24              Size=30","   25      )","   26      print(resize)","   27  except ClientError as e:","   28      if e.response['Error']['Code'] == 'InvalidParameterValue':","   29          print('ERROR MESSAGE: {}'.format(e))\"","   30  sudo curl --silent --location -o /usr/local/bin/kubectl    https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/kubectl","   31  sudo chmod +x /usr/local/bin/kubectl","   32  curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"","   33  unzip awscliv2.zip","   34  sudo ./aws/install","   35  sudo yum -y install jq gettext bash-completion moreutils","   36  echo 'yq() {","   37    docker run --rm -i -v \"${PWD}\":/workdir mikefarah/yq \"$@\"","   38  }' | tee -a ~/.bashrc && source ~/.bashrc","   39  for command in kubectl jq envsubst aws;   do     which $command &>/dev/null && echo \"$command in path\" || echo \"$command NOT FOUND\";   done","   40  kubectl completion bash >>  ~/.bash_completion","   41  . /etc/profile.d/bash_completion.sh","   42  . ~/.bash_completion","   43  echo 'export LBC_VERSION=\"v2.2.0\"' >>  ~/.bash_profile","   44  .  ~/.bash_profile","   45  rm -vf ${HOME}/.aws/credentials","   46  export ACCOUNT_ID=$(aws sts get-caller-identity --output text --query Account)","   47  export AWS_REGION=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')","   48  export AZS=($(aws ec2 describe-availability-zones --query 'AvailabilityZones[].ZoneName' --output text --region $AWS_REGION))","   49  echo $ACCOUNT_ID ","   50  echo $AWS_REGION ","   51  echo $AZS ","   52  test -n \"$AWS_REGION\" && echo AWS_REGION is \"$AWS_REGION\" || echo AWS_REGION is not set","   53  echo \"export ACCOUNT_ID=${ACCOUNT_ID}\" | tee -a ~/.bash_profile","   54  echo \"export AWS_REGION=${AWS_REGION}\" | tee -a ~/.bash_profile","   55  echo \"export AZS=(${AZS[@]})\" | tee -a ~/.bash_profile","   56  aws configure set default.region ${AWS_REGION}","   57  aws configure get default.region","   58  test -n \"$AWS_REGION\" && echo AWS_REGION is \"$AWS_REGION\" || echo AWS_REGION is not set","   59  echo \"export ACCOUNT_ID=${ACCOUNT_ID}\" | tee -a ~/.bash_profile","   60  echo \"export AWS_REGION=${AWS_REGION}\" | tee -a ~/.bash_profile","   61  echo \"export AZS=(${AZS[@]})\" | tee -a ~/.bash_profile","   62  aws configure set default.region ${AWS_REGION}","   63  aws configure get default.region","   64  aws sts get-caller-identity --query Arn | grep eksworkshop-admin -q && echo \"IAM role valid\" || echo \"IAM role NOT valid\"","   65  aws sts get-caller-identity --query Arn | grep eks-admin -q && echo \"IAM role valid\" || echo \"IAM role NOT valid\"","   66  vi ~/.bash_completion ","   67  cd ~/environment","   68  git clone https://github.com/aws-containers/ecsdemo-frontend.git","   69  git clone https://github.com/brentley/ecsdemo-nodejs.git","   70  git clone https://github.com/brentley/ecsdemo-crystal.git","   71  aws kms create-alias --alias-name alias/eksworkshop --target-key-id $(aws kms create-key --query KeyMetadata.Arn --output text)","   72  export MASTER_ARN=$(aws kms describe-key --key-id alias/eksworkshop --query KeyMetadata.Arn --output text)","   73  echo \"export MASTER_ARN=${MASTER_ARN}\" | tee -a ~/.bash_profile","   74  curl --silent --location \"https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp","   75  sudo mv -v /tmp/eksctl /usr/local/bin","   76  eksctl version","   77  eksctl completion bash >> ~/.bash_completion","   78  . /etc/profile.d/bash_completion.sh","   79  . ~/.bash_completion","   80  eksctl completion bash >> ~/.bash_completion","   81  . /etc/profile.d/bash_completion.sh","   82  . ~/.bash_completion","   83  aws sts get-caller-identity","   84  cat << EOF > eksworkshop.yaml","   85  ---","   86  apiVersion: eksctl.io/v1alpha5","   87  kind: ClusterConfig","   88  metadata:","   89    name: eksworkshop-eksctl","   90    region: ${AWS_REGION}","   91    version: \"1.19\"","   92  availabilityZones: [\"${AZS[0]}\", \"${AZS[1]}\", \"${AZS[2]}\"]","   93  managedNodeGroups:","   94  - name: nodegroup","   95    desiredCapacity: 3","   96    instanceType: t3.small","   97    ssh:","   98      enableSsm: true","   99  secretsEncryption:","  100    keyARN: ${MASTER_ARN}","  101  EOF","  102  dir eksworkshop.yaml ","  103  vi eksworkshop.yaml ","  104  kubectl get nodes","  105  cat eksworkshop.yaml ","  106  kubectl get nodes","  107  kubectl get nodes # if we see our 3 nodes, we know we have authenticated correctly","  108  STACK_NAME=$(eksctl get nodegroup --cluster eksworkshop-eksctl -o json | jq -r '.[].StackName')","  109  ROLE_NAME=$(aws cloudformation describe-stack-resources --stack-name $STACK_NAME | jq -r '.StackResources[] | select(.ResourceType==\"AWS::IAM::Role\") | .PhysicalResourceId')","  110  echo \"export ROLE_NAME=${ROLE_NAME}\" | tee -a ~/.bash_profile","  111  eksctl create cluster -f eksworkshop.yaml","  112  StactName='production'","  113  echo StackName","  114  echo $StackName","  115  export StactName='production'","  116  echo $StackName","  117  export StactName='production'","  118  echo $StackName","  119  cat .bash","  120  cat .bashrc","  121  cat ~/.bashrc","  122  eksctl get nodegroup --cluster eksworkshop-eksctl -o json | jq -r '.[].StackName'","  123  eksctl get nodegroup --cluster production -o json | jq -r '.[].StackName'","  124  STACK_NAME=$(eksctl get nodegroup --cluster production -o json | jq -r '.[].StackName')","  125  echo $STACK_NAME ","  126  eksworkshop-eksctl -o json | jq -r '.[].StackName')","  127  ROLE_NAME=$(aws cloudformation describe-stack-resources --stack-name $STACK_NAME | jq -r '.StackResources[] | select(.ResourceType==\"AWS::IAM::Role\") | .PhysicalResourceId')","  128  echo \"export ROLE_NAME=${ROLE_NAME}\" | tee -a ~/.bash_profile","  129  vi ~/.bash_profile ","  130  c9builder=$(aws cloud9 describe-environment-memberships --environment-id=$C9_PID | jq -r '.memberships[].userArn')","  131  if echo ${c9builder} | grep -q user; then rolearn=${c9builder};         echo Role ARN: ${rolearn}; elif echo ${c9builder} | grep -q assumed-role; then         assumedrolename=$(echo ${c9builder} | awk -F/ '{print $(NF-1)}');         rolearn=$(aws iam get-role --role-name ${assumedrolename} --query Role.Arn --output text) ;         echo Role ARN: ${rolearn}; fi","  132  eksctl create iamidentitymapping --cluster production --arn ${rolearn} --group system:masters --username admin","  133  kubectl describe configmap -n kube-system aws-auth","  134  kubectl get nodes","  135  kubectl get po -A","  136  aws iam get-role --role-name \"AWSServiceRoleForElasticLoadBalancing\" || aws iam create-service-linked-role --aws-service-name \"elasticloadbalancing.amazonaws.com\"","  137  curl -sSL https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash","  138  helm version --short","  139  helm repo add stable https://charts.helm.sh/stable","  140  helm search repo stable","  141  helm completion bash >> ~/.bash_completion","  142  . /etc/profile.d/bash_completion.sh","  143  . ~/.bash_completion","  144  source <(helm completion bash)","  145  # first, add the default repository, then update","  146  helm repo add stable https://charts.helm.sh/stable","  147  helm repo update","  148  helm search repo","  149  helm search repo nginx","  150  helm repo add bitnami https://charts.bitnami.com/bitnami","  151  helm search repo bitnami","  152  helm search repo nginx","  153  helm search repo bitnami/nginx","  154  kubectl get svc,po,deploy","  155  aws iam create-user --user-name rbac-user","  156  aws iam create-access-key --user-name rbac-user | tee /tmp/create_output.json","  157  cat << EoF > rbacuser_creds.sh","  158  export AWS_SECRET_ACCESS_KEY=$(jq -r .AccessKey.SecretAccessKey /tmp/create_output.json)","  159  export AWS_ACCESS_KEY_ID=$(jq -r .AccessKey.AccessKeyId /tmp/create_output.json)","  160  EoF","  161  kubectl get configmap -n kube-system aws-auth -o yaml | grep -v \"creationTimestamp\\|resourceVersion\\|selfLink\\|uid\" | sed '/^  annotations:/,+2 d' > aws-auth.yaml","  162  kubectl apply -f aws-auth.yaml","  163  . rbacuser_creds.sh","  164  aws sts get-caller-identity","  165  unset AWS_SECRET_ACCESS_KEY","  166  unset AWS_ACCESS_KEY_ID","  167  aws sts get-caller-identity","  168  unset AWS_SECRET_ACCESS_KEY","  169  unset AWS_ACCESS_KEY_ID","  170  kubectl delete namespace rbac-test","  171  rm rbacuser_creds.sh","  172  rm rbacuser-role.yaml","  173  rm rbacuser-role-binding.yaml","  174  aws iam delete-access-key --user-name=rbac-user --access-key-id=$(jq -r .AccessKey.AccessKeyId /tmp/create_output.json)","  175  aws iam delete-user --user-name rbac-user","  176  rm /tmp/create_output.json","  177  kubectl apply -f aws-auth.yaml","  178  rm aws-auth.yaml","  179  POLICY=$(echo -n '{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::'; echo -n \"$ACCOUNT_ID\"; echo -n ':root\"},\"Action\":\"sts:AssumeRole\",\"Condition\":{}}]}')","  180  echo ACCOUNT_ID=$ACCOUNT_ID","  181  echo POLICY=$POLICY","  182  aws iam create-role   --role-name k8sAdmin   --description \"Kubernetes administrator role (for AWS IAM Authenticator for Kubernetes).\"   --assume-role-policy-document \"$POLICY\"   --output text   --query 'Role.Arn'","  183  aws iam create-role   --role-name k8sDev   --description \"Kubernetes developer role (for AWS IAM Authenticator for Kubernetes).\"   --assume-role-policy-document \"$POLICY\"   --output text   --query 'Role.Arn'","  184    ","  185  aws iam create-role   --role-name k8sInteg   --description \"Kubernetes role for integration namespace in quick cluster.\"   --assume-role-policy-document \"$POLICY\"   --output text   --query 'Role.Arn'","  186  aws iam create-group --group-name k8sAdmin","  187  ADMIN_GROUP_POLICY=$(echo -n '{","  188    \"Version\": \"2012-10-17\",","  189    \"Statement\": [","  190      {","  191        \"Sid\": \"AllowAssumeOrganizationAccountRole\",","  192        \"Effect\": \"Allow\",","  193        \"Action\": \"sts:AssumeRole\",","  194        \"Resource\": \"arn:aws:iam::'; echo -n \"$ACCOUNT_ID\"; echo -n ':role/k8sAdmin\"","  195      }","  196    ]","  197  }')","  198  echo ADMIN_GROUP_POLICY=$ADMIN_GROUP_POLICY","  199  aws iam put-group-policy --group-name k8sAdmin --policy-name k8sAdmin-policy --policy-document \"$ADMIN_GROUP_POLICY\"","  200  aws iam create-group --group-name k8sDev","  201  DEV_GROUP_POLICY=$(echo -n '{","  202    \"Version\": \"2012-10-17\",","  203    \"Statement\": [","  204      {","  205        \"Sid\": \"AllowAssumeOrganizationAccountRole\",","  206        \"Effect\": \"Allow\",","  207        \"Action\": \"sts:AssumeRole\",","  208        \"Resource\": \"arn:aws:iam::'; echo -n \"$ACCOUNT_ID\"; echo -n ':role/k8sDev\"","  209      }","  210    ]","  211  }')","  212  echo DEV_GROUP_POLICY=$DEV_GROUP_POLICY","  213  aws iam put-group-policy --group-name k8sDev --policy-name k8sDev-policy --policy-document \"$DEV_GROUP_POLICY\"","  214  aws iam create-group --group-name k8sInteg","  215  INTEG_GROUP_POLICY=$(echo -n '{","  216    \"Version\": \"2012-10-17\",","  217    \"Statement\": [","  218      {","  219        \"Sid\": \"AllowAssumeOrganizationAccountRole\",","  220        \"Effect\": \"Allow\",","  221        \"Action\": \"sts:AssumeRole\",","  222        \"Resource\": \"arn:aws:iam::'; echo -n \"$ACCOUNT_ID\"; echo -n ':role/k8sInteg\"","  223      }","  224    ]","  225  }')","  226  echo INTEG_GROUP_POLICY=$INTEG_GROUP_POLICY","  227  aws iam put-group-policy --group-name k8sInteg --policy-name k8sInteg-policy --policy-document \"$INTEG_GROUP_POLICY\"","  228  aws iam list-groups","  229  mkdir -p ~/.aws","  230  cat << EoF >> ~/.aws/config","  231  [profile admin]","  232  role_arn=arn:aws:iam::${ACCOUNT_ID}:role/k8sAdmin","  233  source_profile=eksAdmin","  234  [profile dev]","  235  role_arn=arn:aws:iam::${ACCOUNT_ID}:role/k8sDev","  236  source_profile=eksDev","  237  [profile integ]","  238  role_arn=arn:aws:iam::${ACCOUNT_ID}:role/k8sInteg","  239  source_profile=eksInteg","  240  EoF","  241  kubectl version --short","  242  aws --version","  243  aws eks describe-cluster --name production --query cluster.identity.oidc.issuer --output text","  244  eksctl utils associate-iam-oidc-provider --cluster eksworkshop-eksctl --approve","  245  eksctl utils associate-iam-oidc-provider --cluster production --approve","  246  aws iam list-policies --query 'Policies[?PolicyName==`AmazonS3ReadOnlyAccess`].Arn'","  247  export NODEGROUP_NAME=$(eksctl get nodegroups --cluster eksworkshop-eksctl -o json | jq -r '.[0].Name')","  248  export NODEGROUP_NAME=$(eksctl get nodegroups --cluster production -o json | jq -r '.[0].Name')","  249  echo $NODEGROUP_NAME ","  250  eksctl scale nodegroup --cluster eksworkshop-eksctl --name $NODEGROUP_NAME --nodes 6 --nodes-max 6","  251  kubectl get nodes","  252  eksctl scale nodegroup --cluster production --name $NODEGROUP_NAME --nodes 6 --nodes-max 6","  253  curl --silent --location \"https://github.com/kubeflow/kfctl/releases/download/v1.0.1/kfctl_v1.0.1-0-gf3edb9b_linux.tar.gz\" | tar xz -C /tmp","  254  sudo mv -v /tmp/kfctl /usr/local/bin","  255  cat << EoF > kf-install.sh","  256  export AWS_CLUSTER_NAME=eksworkshop-eksctl","  257  export KF_NAME=\\${AWS_CLUSTER_NAME}","  258  export BASE_DIR=${HOME}/environment","  259  export KF_DIR=\\${BASE_DIR}/\\${KF_NAME}","  260  export CONFIG_URI=\"https://raw.githubusercontent.com/kubeflow/manifests/v1.0-branch/kfdef/kfctl_aws.v1.0.1.yaml\"","  261  export CONFIG_FILE=\\${KF_DIR}/kfctl_aws.yaml","  262  EoF","  263  . kf-install.sh ","  264  mkdir -p ${KF_DIR}","  265  cd ${KF_DIR}","  266  wget -O kfctl_aws.yaml $CONFIG_URI","  267  sed -i '/region: us-west-2/ a \\      enablePodIamPolicy: true' ${CONFIG_FILE}","  268  sed -i -e 's/kubeflow-aws/'\"$AWS_CLUSTER_NAME\"'/' ${CONFIG_FILE}","  269  sed -i \"s@us-west-2@$AWS_REGION@\" ${CONFIG_FILE}","  270  sed -i \"s@roles:@#roles:@\" ${CONFIG_FILE}","  271  sed -i \"s@- eksctl-eksworkshop-eksctl-nodegroup-ng-a2-NodeInstanceRole-xxxxxxx@#- eksctl-eksworkshop-eksctl-nodegroup-ng-a2-NodeInstanceRole-xxxxxxx@\" ${CONFIG_FILE}","  272  echo $CONFIG_FILE ","  273  export","  274  export | grep NODE","  275  curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/aws-iam-authenticator","  276  chmod +x aws-iam-authenticator","  277  sudo mv aws-iam-authenticator /usr/local/bin","  278  cd ${KF_DIR}","  279  kfctl apply -V -f ${CONFIG_FILE}","  280  history","  281   . kf-install.sh ","  282  cd ..","  283   . kf-install.sh ","  284  cd ${KF_DIR}","  285  wget -O kfctl_aws.yaml $CONFIG_URI","  286  sed -i '/region: us-west-2/ a \\      enablePodIamPolicy: true' ${CONFIG_FILE}","  287  sed -i -e 's/kubeflow-aws/'\"$AWS_CLUSTER_NAME\"'/' ${CONFIG_FILE}","  288  sed -i \"s@us-west-2@$AWS_REGION@\" ${CONFIG_FILE}","  289  sed -i \"s@roles:@#roles:@\" ${CONFIG_FILE}","  290  sed -i \"s@- eksctl-eksworkshop-eksctl-nodegroup-ng-a2-NodeInstanceRole-xxxxxxx@#- eksctl-eksworkshop-eksctl-nodegroup-ng-a2-NodeInstanceRole-xxxxxxx@\" ${CONFIG_FILE}","  291  curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/aws-iam-authenticator","  292  chmod +x aws-iam-authenticator","  293  sudo mv aws-iam-authenticator /usr/local/bin","  294  cd ${KF_DIR}","  295  kfctl apply -V -f ${CONFIG_FILE}","  296  echo $CONFIG","  297  export | grep -i CONFIG","  298  kfctl apply -V -f ${CONFIG_FILE}","  299  ll","  300  cat kfctl_aws.yaml ","  301  watch kubectl get nodes","  302  kubectl get po -A","  303  kfctl delete -V -f ${CONFIG_FILE}","  304  watch kubectl get po -A","  305  kubectl get po -A","  306  kfctl apply -V -f ${CONFIG_FILE}","  307  watch kubectl get po -n kubeflow","  308  kubectl -n kubeflow get all","  309  kubectl port-forward svc/istio-ingressgateway -n istio-system 8080:80","  310  kfctl delete -V -f ${CONFIG_FILE}","  311  kubectl -n kubeflow get all","  312  watch kubectl get po -A","  313  source kf-install.sh","  314  cd ${KF_DIR}","  315  wget -O kfctl_aws.yaml $CONFIG_URI","  316  sed -i '/region: us-west-2/ a \\      enablePodIamPolicy: true' ${CONFIG_FILE}","  317  sed -i -e 's/kubeflow-aws/'\"$AWS_CLUSTER_NAME\"'/' ${CONFIG_FILE}","  318  sed -i \"s@us-west-2@$AWS_REGION@\" ${CONFIG_FILE}","  319  sed -i \"s@roles:@#roles:@\" ${CONFIG_FILE}","  320  sed -i \"s@- eksctl-eksworkshop-eksctl-nodegroup-ng-a2-NodeInstanceRole-xxxxxxx@#- eksctl-eksworkshop-eksctl-nodegroup-ng-a2-NodeInstanceRole-xxxxxxx@\" ${CONFIG_FILE}","  321  kfctl apply -V -f ${CONFIG_FILE}","  322    cd $(pwd)","  323  watch kubectl get all -n kubeflow","  324  watch kubectl get po -A","  325  watch kubectl get all -n kubeflow","  326  watch kubectl get po -A","  327  watch kubectl get all -n kubeflow","  328  kubectl get node -o wide","  329  ssh ip-192-168-18-56.ap-northeast-2.compute.internal   ","  330  watch kubectl get all -n kubeflow","  331  watch kubectl get all","  332  kubectl get all -n kubeflow","  333  kubectl get po -A","  334  history | grep -i scale","  335  history | grep scale","  336  kfctl apply -V -f ${CONFIG_FILE}","  337  kfctl delete -V -f ${CONFIG_FILE}","  338  history | grep -i scale","  339  kubectl get po -A","  340  kfctl apply -V -f ${CONFIG_FILE}","  341  dir","  342  ll","  343  cd kustomize/","  344  ll","  345  cd ..","  346  ll","  347  find . -print | grep authzadaptor","  348  vi ./.cache/manifests/manifests-1.0.1/aws/aws-istio-authz-adaptor/base/authzadaptor.yaml","  349  find . -print | grep aws-istio-authz-adaptor","  350  vi ./kustomize/aws-istio-authz-adaptor/base/deployment.yaml","  351  find . -print | grep deployment.yaml","  352  cat ./kustomize/mpi-operator/base/deployment.yaml","  353  vi ./kustomize/aws-istio-authz-adaptor/base/deployment.yaml","  354  find . -print | grep aws-istio-authz-adaptor","  355  vi ./.cache/manifests/manifests-1.0.1/aws/aws-istio-authz-adaptor/base/deployment.yaml","  356  vi ./kustomize/aws-istio-authz-adaptor/base/deployment.yaml","  357  vi ./.cache/manifests/manifests-1.0.1/aws/aws-istio-authz-adaptor/base/deployment.yaml","  358  kfctl apply -V -f ${CONFIG_FILE}","  359  ll","  360  history | grep scale","  361  history","  362  history","  363  ll","  364  vi modify-kustomized-yaml.sh","  365  history | grep scale","  366  eksctl scale nodegroup --cluster production --name $NODEGROUP_NAME --nodes 3 --nodes-max 6","  367  kubectl get nodes","  368  kubectl drain ip-192-168-18-56.ap-northeast-2.compute.internal ip-192-168-57-248.ap-northeast-2.compute.internal ip-192-168-78-1.ap-northeast-2.compute.internal","  369  kubectl get nodes","  370  eksctl scale nodegroup --cluster production --name $NODEGROUP_NAME --nodes 3 --nodes-max 6","  371  kubectl get nodes","  372  kubectl uncordon ip-192-168-57-248.ap-northeast-2.compute.internal ","  373  kubectl get nodes","  374  kubectl uncordon ip-192-168-18-56.ap-northeast-2.compute.internal ","  375  kubectl uncordon ip-192-168-78-1.ap-northeast-2.compute.internal","  376  kubectl get nodes","  377  eksctl scale nodegroup --cluster production --name $NODEGROUP_NAME --nodes 5 --nodes-max 6","  378  kubectl get nodes","  379  kubectl get po -A","  380  watch kubectl get po -n kubectl","  381  watch kubectl get po -n kubeflow","  382  ll","  383  history","  384  kfctl delete -V -f ${CONFIG_FILE}","  385  ll","  386  cd ..","  387  ll","  388  history | grep eksctl","  389  eksctl delete","  390  eksctl delete nodegroup nodegroup","  391  eksctl delete nodegroup nodegroup --cluster production","  392  eksctl delete ","  393  eksctl list","  394  eksctl ","  395  eksctl get fargateprofile","  396  eksctl get fargateprofile --cluster production","  397  eksctl delete fargateprofile serverless --cluster production","  398  eksctl delete","  399  eksctl delete cluster production","  400  eksctl delete fargateprofile serverless --cluster production","  401  eksctl delete cluster production -f eksworkshop.yaml ","  402  eksctl delete -f eksworkshop.yaml ","  403  eksctl delete cluster -f eksworkshop.yaml ","  404  ll","  405  vi eksworkshop.yaml ","  406  eksctl cluster cluster -f eksworkshop.yaml ","  407  ll","  408  cat kf-install.sh ","  409  watch kubectl get po -n kubeflow","  410  kubectl get nodes","  411  ll","  412  cd ..","  413  ll","  414  source ./kf-install.sh ","  415  cd eksworkshop-eksctl/","  416  ll","  417  kubectl get nodes","  418  install-kfctl.sh","  419  vi install-kfctl.sh","  420  kfctl --version","  421  kfctl","  422  kfctl version","  423  source kf-install.sh","  424  cd ..","  425  source kf-install.sh","  426  wget -O kfctl_aws.yaml $CONFIG_URI","  427  eksctl create cluster -f eksworkshop.yaml ","  428  kubectl get nodes","  429  sed -i '/region: us-west-2/ a \\      enablePodIamPolicy: true' ${CONFIG_FILE}","  430  sed -i -e 's/kubeflow-aws/'\"$AWS_CLUSTER_NAME\"'/' ${CONFIG_FILE}","  431  sed -i \"s@us-west-2@$AWS_REGION@\" ${CONFIG_FILE}","  432  sed -i \"s@roles:@#roles:@\" ${CONFIG_FILE}","  433  sed -i \"s@- eksctl-eksworkshop-eksctl-nodegroup-ng-a2-NodeInstanceRole-xxxxxxx@#- eksctl-eksworkshop-eksctl-nodegroup-ng-a2-NodeInstanceRole-xxxxxxx@\" ${CONFIG_FILE}","  434  ll","  435  cd eksworkshop-eksctl/","  436  sed -i '/region: us-west-2/ a \\      enablePodIamPolicy: true' ${CONFIG_FILE}","  437  sed -i -e 's/kubeflow-aws/'\"$AWS_CLUSTER_NAME\"'/' ${CONFIG_FILE}","  438  sed -i \"s@us-west-2@$AWS_REGION@\" ${CONFIG_FILE}","  439  sed -i \"s@roles:@#roles:@\" ${CONFIG_FILE}","  440  sed -i \"s@- eksctl-eksworkshop-eksctl-nodegroup-ng-a2-NodeInstanceRole-xxxxxxx@#- eksctl-eksworkshop-eksctl-nodegroup-ng-a2-NodeInstanceRole-xxxxxxx@\" ${CONFIG_FILE}","  441  cd ..","  442  ll","  443  source kf-install.sh","  444  cd ${KF_DIR}","  445  ll","  446  source kf-install.sh ","  447  cd ${KF_DIR}","  448  cat kf-install.sh ","  449  echo $KF_DIR ","  450  ll","  451  mv eksworkshop-eksctl/ production","  452  ll","  453  cd $KF_DIR","  454  ll","  455  wget -O kfctl_aws.yaml $CONFIG_URI","  456  ll","  457  sed -i '/region: us-west-2/ a \\      enablePodIamPolicy: true' ${CONFIG_FILE}","  458  sed -i -e 's/kubeflow-aws/'\"$AWS_CLUSTER_NAME\"'/' ${CONFIG_FILE}","  459  sed -i \"s@us-west-2@$AWS_REGION@\" ${CONFIG_FILE}","  460  sed -i \"s@roles:@#roles:@\" ${CONFIG_FILE}","  461  sed -i \"s@- eksctl-eksworkshop-eksctl-nodegroup-ng-a2-NodeInstanceRole-xxxxxxx@#- eksctl-eksworkshop-eksctl-nodegroup-ng-a2-NodeInstanceRole-xxxxxxx@\" ${CONFIG_FILE}","  462  cd ${KF_DIR}","  463  kubectl get nodes","  464  kubectl get po -A","  465  kfctl apply -V -f ${CONFIG_FILE}","  466  kubectl get po -A","  467  watch kubectl get po -A","  468  watch kubectl get po -n kubeflow","  469  kubectl get po -A","  470  kubectl -n istio-system logs authzadaptor-67794757dc-6rg26","  471  kubectl -n istio-system get po  authzadaptor-67794757dc-6rg26","  472  kubectl -n istio-system describe po  authzadaptor-67794757dc-6rg26","  473  ll","  474  history | grep scale","  475  eksctl scale nodegroup --cluster production --name $NODEGROUP_NAME --nodes 6 --nodes-max 6","  476  kubectl -n istio-system describe po  authzadaptor-67794757dc-6rg26","  477  kubectl get nodes","  478  kubectl -n istio-system describe po  authzadaptor-67794757dc-6rg26","  479  watch kubectl get po -n kubeflow","  480  kubectl -n kubeflow describe po authzadaptor-67794757dc-6rg26","  481  watch kubectl get po -n kubeflow","  482  kubectl -n kubeflow describe po admission-webhook-deployment-5d9ccb5696-nnx7w","  483  ll","  484  history | grep scale","  485  eksctl scale nodegroup --cluster production --name $NODEGROUP_NAME --nodes 8 --nodes-max 8","  486  kubectl get nodes","  487  eksctl scale nodegroup --cluster production --name $NODEGROUP_NAME --nodes 9 --nodes-max 9","  488  kubectl get nodes","  489  kubectl -n kubeflow describe po admission-webhook-deployment-5d9ccb5696-nnx7w","  490  kubectl get nodes","  491  watch kubectl get po -n kubeflow","  492  kubectl get po -A","  493  kubectl get po -n kubeflow","  494  kubectl -n kubeflow describe po nvidia-device-plugin-daemonset-bg9dt","  495  eksctl scale nodegroup --cluster production --name $NODEGROUP_NAME --nodes 12 --nodes-max 12","  496  kubectl get po -n kubeflow","  497  kubectl -n kubeflow describe po nvidia-device-plugin-daemonset-bg9dt","  498  ll","  499  cd ..","  500  ll","  501  vi eksworkshop.yaml ","  502  eksctl ","  503  eksctl update -f eksworkshop.yaml ","  504  eksctl update nodegroup -f eksworkshop.yaml ","  505  kubectl get nodes","  506  kubectl get po -A","  507  kubectl -n kubeflow describe po nvidia-device-plugin-daemonset-v4gbn","  508  ll","  509  eksctl","  510  eksctl update","  511  eksctl update nodegroup ","  512  eksctl update nodegroup  -f eksworkshop.yaml ","  513  eksctl update nodegroup nodegroup -f eksworkshop.yaml ","  514  eksctl update nodegroup nodegroup","  515  eksctl update nodegroup nodegroup --config-file eksworkshop.yaml ","  516  eksctl update nodegroup nodegroup -f eksworkshop.yaml ","  517  eksctl update nodegroup --config-file eksworkshop.yaml ","  518  eksctl delete nodegroup nodegroup","  519  eksctl delete nodegroup nodegroup --cluster production","  520  ll","  521  eksctl update nodegroup -f eksworkshop.yaml ","  522  ll","  523  eksctl delete cluster ","  524  ssh-keygen","  525  eksctl delete cluster --name production","  526  eksctl create cluster -f eksworkshop.yaml ","  527  ll","  528  eksctl","  529  eksctl create","  530  eksctl create cluster","  531  eksctl create cluster -f eksworkshop.yaml ","  532  kubectl get nodes","  533  ll","  534  history","  535  history | grep kfctl","  536  cd production/","  537  kubectl get po -A","  538  kfctl apply -V -f ${CONFIG_FILE}","  539  watch kubectl get po -A","  540  kubectl -n kubeflow describe po mpi-operator-77bb5d8f4b-l7kvm   ","  541  watch kubectl get po -n kubeflow","  542  watch kubectl get po ","  543  kubectl get po -A","  544  kubectl -n kubeflow get po","  545  kubectl -n kubeflow get deploy","  546  kubectl -n kubeflow get deploy | grep -i mpi","  547  kubectl -n kubeflow delete deploy mpi-operator","  548  kubectl -n kubeflow get po","  549  git clone https://github.com/kubeflow/mpi-operator","  550  cd mpi-operator","  551  kubectl apply -f deploy/v2beta1/mpi-operator.yaml","  552  kubectl -n kubeflow get po","  553  kubectl get po -A | grep -i mpi","  554  kubectl delete -f deploy/v2beta1/mpi-operator.yaml","  555  mv deploy/v2beta1/mpi-operator.yaml .","  556  ll","  557  vi mpi-operator.yaml ","  558  kubectl apply -f mpi-operator.yaml ","  559  kubectl get po -n kubeflow","  560  ll","  561  rm -rf deploy/","  562  ll","  563  cd examples/","  564  ll","  565  cd ..","  566  cd examples/","  567  ll","  568  cd ..","  569  ll","  570  mv mpi-operator.yaml  ..","  571  ll","  572  cd ..","  573  ll","  574  rm -rf mpi-operator","  575  ll","  576  history","  577  vi redeploy-mpi-operator.sh","  578  kubectl get nodes","  579  ssh ip-192-168-48-142.ap-northeast-2.compute.internal","  580  ssh root@ip-192-168-48-142.ap-northeast-2.compute.internal","  581  kubectl get nodes -o wide","  582  ssh root@192.168.48.142","  583  ssh root@15.164.182.212","  584  ssh ec2-user@15.164.182.212","  585  kubectl port-forward svc/istio-ingressgateway -n istio-system 8080:80","  586  export HASH=$(< /dev/urandom tr -dc a-z0-9 | head -c6)","  587  export S3_BUCKET=$HASH-eks-ml-data","  588  aws s3 mb s3://$S3_BUCKET --region $AWS_REGION","  589  aws iam create-user --user-name s3user","  590  aws iam attach-user-policy --user-name s3user --policy-arn arn:aws:iam::aws:policy/AmazonS3FullAccess","  591  aws iam create-access-key --user-name s3user > /tmp/create_output.json","  592  export AWS_ACCESS_KEY_ID_VALUE=$(jq -j .AccessKey.AccessKeyId /tmp/create_output.json | base64)","  593  export AWS_SECRET_ACCESS_KEY_VALUE=$(jq -j .AccessKey.SecretAccessKey /tmp/create_output.json | base64)","  594  cat <<EOF | kubectl apply -f -","  595  apiVersion: v1","  596  kind: Secret","  597  metadata:","  598    name: aws-secret","  599  type: Opaque","  600  data:","  601    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_VALUE","  602    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_VALUE","  603  EOF","  604  curl -LO https://eksworkshop.com/advanced/420_kubeflow/kubeflow.files/mnist-training.yaml","  605  envsubst < mnist-training.yaml | kubectl create -f -","  606  cat mnist-training.yaml ","  607  kubectl get pods","  608  curl -LO https://eksworkshop.com/advanced/420_kubeflow/kubeflow.files/mnist-inference.yaml","  609  envsubst <mnist-inference.yaml | kubectl apply -f -","  610  kubectl get pods -l app=mnist,type=inference","  611  kubectl get pods -l app=mnist","  612  kubectl get pods -l app=mnist,type=inference","  613  curl -O https://bootstrap.pypa.io/get-pip.py","  614  python3 get-pip.py --user","  615  pip3 install requests tensorflow --user","  616  curl -LO https://eksworkshop.com/advanced/420_kubeflow/kubeflow.files/inference_client.py","  617  python inference_client.py --endpoint http://localhost:8500/v1/models/mnist:predict","  618  kubectl delete -f mnist-training.yaml","  619  kubectl delete -f mnist-inference.yaml ","  620  kubectl get po","  621  kubectl get no","  622  ll","  623  exit","  624  kubectl port-forward `kubectl get pods -l=app=mnist,type=inference -o jsonpath='{.items[0].metadata.name}' --field-selector=status.phase=Running` 8500:8500","  625  ll","  626  exit","  627  ls -al","  628  kubectl get svc","  629  kubectl get svc -A","  630  kubectl patch svc istio-ingressgateway -n istio-system -p '{\"spec\": {\"type\": \"LoadBalancer\"}}'","  631  kubectl get svc -A","  632  kubectl patch svc istio-ingressgateway -n istio-system -p '{\"spec\": {\"type\": \"NodePort\"}}'","  633  kubectl get svc -A","  634  git clone https://github.com/kubeflow/manifests/tree/master/knative","  635  kubectl patch svc istio-ingressgateway -n istio-system -p '{\"spec\": {\"type\": \"LoadBalancer\"}}'","  636  kubectl get svc","  637  kubectl get svc -A","  638  kubectl get ns","  639  kubectl create ns dev","  640  kubectl get ns","  641  kubectl describe service istio-ingressgateway -n istio-system | grep \"LoadBalancer Ingress\"","  642  export INGRESS_GATEWAY_IP=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')","  643  echo $INGRESS_GATEWAY_IP ","  644  export INGRESS_GATEWAY_IP=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')","  645  echo $INGRESS_GATEWAY_IP ","  646  kubectl -n istio-system get service istio-ingressgateway ","  647  kubectl -n istio-system get service istio-ingressgateway -o wide","  648  kubectl -n istio-system get service istio-ingressgateway -o yaml","  649  export INGRESS_GATEWAY_IP=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')","  650  echo $INGRESS_GATEWAY_IP ","  651  kubectl get secret $INGRESS_GATEWAY_SECRET -n istio-system ","  652  echo $SECRET_NAME","  653  kubectl get ingress istio-ingress -n istio-system","  654  ls -al","  655  history","  656  kfctl delete -V -f ${CONFIG_FILE}","  657  ll","  658  echo $CONFIG_FILE","  659  ll","  660  cat kf-install.sh ","  661  source ./kf-install.sh ","  662  echo $CONFIG_FILE","  663  kubectl get po -A","  664  kfctl delete -V -f ${CONFIG_FILE}","  665  kfctl apply -V -f ${CONFIG_FILE}","  666  history | grep patch","  667  kubectl get ingress istio-ingress -n istio-system","  668  kubectl get po -A","  669  ll","  670  cd production/","  671  ll","  672  cat redeploy-mpi-operator.sh ","  673  bash redeploy-mpi-operator.sh ","  674  kubectl get po -A","  675  history | grep patch","  676  kubectl patch svc istio-ingressgateway -n istio-system -p '{\"spec\": {\"type\": \"LoadBalancer\"}}'","  677  kubectl get ing -A","  678  kubectl patch svc istio-ingressgateway -n istio-system -p '{\"spec\": {\"type\": \"NodePort\"}}'","  679  kubectl get ing -A","  680  kubectl patch svc istio-ingressgateway -n istio-system -p '{\"spec\": {\"type\": \"LoadBalancer\"}}'","  681  kubectl get svc -n istio-system","  682  kubectl get ing -A","  683  kubectl get po -A","  684  ll","  685  kubectl -n istio-system get svc","  686  kubectl -n istio-system get svc istio-ingressgageway","  687  kubectl -n istio-system get svc istio-ingressgateway","  688  kubectl -n istio-system get svc istio-ingressgateway -o yaml > istio-ingressgateway.yaml","  689  ll","  690  find . -print | grep -i service.yaml","  691  find . -print service.yaml | grep -i gateway","  692  find . -print | grep -i gateway","  693  find . -print | grep -i service_istio_ingressgateway","  694  find . -print | grep -i service_istio-ingressgateway","  695  cat ./production/.cache/manifests/manifests-1.2.0/tests/stacks/aws/application/istio-1-3-1-stack/test_data/expected/~g_v1_service_istio-ingressgateway.yaml","  696  kubectl -n istio-system get svc istio-ingressgateway ","  697  kubectl -n istio-system delete svc istio-ingressgateway ","  698  ll *.yaml","  699  kubectl apply -f istio-ingressgateway.yaml ","  700  kubectl -n istio-system get svc istio-ingressgateway","  701  kubectl apply -f istio-ingressgateway.yaml ","  702  kubectl -n istio-system delete svc istio-ingressgateway ","  703  kubectl apply -f istio-ingressgateway.yaml ","  704  kubectl -n istio-system get svc istio-ingressgateway ","  705  kubectl -n istio-system get svc istio-ingressgateway -o yaml","  706  kubectl get ingress istio-ingress -n istio-system","  707  kubectl apply -f kubeflow-user.yaml ","  708  cd production/","  709  kubectl delete -V -f kfctl_aws.yaml ","  710  aws iam list-roles   | jq -r \".Roles[] \\","  711    | select(.RoleName \\","  712    | startswith(\\\"eksctl-$AWS_CLUSTER_NAME\\\") and contains(\\\"NodeInstanceRole\\\")) \\","  713    .RoleName\"","  714  kfctl delete -V -f kfctl_aws.yaml ","  715  kubectl get po -A","  716  kfctl apply -V -f kfctl_aws.yaml ","  717  watch kubectl get po -A","  718  kubectl get ing -A","  719  kubectl get ing -n istio-system -o yaml","  720  kubectl -n istio-system get ing","  721  kubectl -n kubeflow logs $(kubectl get pods -n kubeflow --selector=app=aws-alb-ingress-controller --output=jsonpath={.items..metadata.name}) ","  722  kubectl get configmaps aws-alb-ingress-controller-config -n kubeflow -o yaml","  723  cd ..","  724  kubectl delete -f istio-ingressgateway.yaml ","  725  kubectl apply -f istio-ingressgateway.yaml ","  726  kubectl -n kubeflow logs $(kubectl get pods -n kubeflow --selector=app=aws-alb-ingress-controller --output=jsonpath={.items..metadata.name}) ","  727  kubectl get configmaps aws-alb-ingress-controller-config -n kubeflow -o yaml","  728  kubectl delete -f istio-ingressgateway.yaml ","  729  kubectl apply -f istio-ingressgateway.yaml ","  730  cd production/","  731  dir","  732  ll","  733  watch kubectl get po -n kubeflow","  734  ll","  735  cd production/","  736  ll","  737  cd ..","  738  ll","  739  source kf-install.sh ","  740  cd ${KF_DIR}","  741  wget -O kfctl_aws.yaml $CONFIG_URI","  742  sed -i '/region: us-west-2/ a \\      enablePodIamPolicy: true' ${CONFIG_FILE}","  743  sed -i -e 's/kubeflow-aws/'\"$AWS_CLUSTER_NAME\"'/' ${CONFIG_FILE}","  744  sed -i \"s@us-west-2@$AWS_REGION@\" ${CONFIG_FILE}","  745  sed -i \"s@roles:@#roles:@\" ${CONFIG_FILE}","  746  sed -i \"s@- eksctl-eksworkshop-eksctl-nodegroup-ng-a2-NodeInstanceRole-xxxxxxx@#- eksctl-eksworkshop-eksctl-nodegroup-ng-a2-NodeInstanceRole-xxxxxxx@\" ${CONFIG_FILE}","  747  kfctl delete -V -f kfctl_aws.yaml ","  748  kfctl apply -V -f kfctl_aws.yaml ","  749  kfctl delete -V -f kfctl_aws.yaml ","  750  kfctl delete -V -f kfctl_aws_cognito_1.2.0.yaml ","  751  watch kubectl get po -n kubeflow","  752  kubectl get po -A","  753  history | grep role","  754  ll","  755  ll","  756  cd ..","  757  ll","  758  cd production/","  759  ll","  760  source kf-install.sh ","  761  kubectl get po -A","  762  kfctl apply -f kfctl_aws_cognito_1.2.0.yaml ","  763  watch kubectl get po -A","  764  kubectl get po -A","  765  ll","  766  kubectl get po -A","  767  ll","  768  cat mpi-operator.yaml ","  769  ll","  770  cat redeploy-mpi-operator.sh ","  771  bash redeploy-mpi-operator.sh ","  772  kubectl get po -A","  773  ll","  774  cd ..","  775  ll","  776  cat istio-ingressgateway.yaml ","  777  ll","  778  kubectl delete -f istio-ingressgateway.yaml ","  779  kubectl apply -f istio-ingressgateway.yaml ","  780  kubectl -n istio-system get ing","  781  kubectl -n istio-system get svc","  782  kubectl -n istio-system get svc istio-ingressgateway ","  783  kubectl port-forward svc/istio-ingressgateway -n istio-system 8080:80","  784  ll","  785  kubectl -n kubeflow logs $(kubectl get pods -n kubeflow --selector=app=aws-alb-ingress-controller --output=jsonpath={.items..metadata.name}) ","  786  kubectl get configmaps aws-alb-ingress-controller-config -n kubeflow -o yaml > alb.yaml","  787  ll","  788  kubectl delete -f alb.yaml ","  789  kubectl apply -f alb.yaml ","  790  kubectl -n kubeflow logs $(kubectl get pods -n kubeflow --selector=app=aws-alb-ingress-controller --output=jsonpath={.items..metadata.name}) ","  791  kubectl delete -f alb.yaml ","  792  ll","  793  cd production/","  794  ll","  795  kfctl apply -V -f kfctl_aws_cognito_1.2.0.yaml ","  796  ll","  797  kubectl delete -f mpi-operator.yaml ","  798  kfctl apply -V -f kfctl_aws_cognito_1.2.0.yaml ","  799  kubectl delete -f mpi-operator.yaml ","  800  kubectl apply -f mpi-operator.yaml ","  801  kubectl -n kubeflow logs $(kubectl get pods -n kubeflow --selector=app=aws-alb-ingress-controller --output=jsonpath={.items..metadata.name}) ","  802  kubectl get svc -n istio-system","  803  ll","  804  cd ..","  805  ll","  806  mv istio-ingressgateway.yaml  production/","  807  cd production/","  808  ll","  809  kubectl delete -f istio-ingressgateway.yaml ","  810  kubectl apply -f istio-ingressgateway.yaml ","  811  kubectl get svc -n istio-system","  812  ll","  813  aws iam list-roles   | jq -r \".Roles[] \\","  814    | select(.RoleName \\","  815    | startswith(\\\"eksctl-$AWS_CLUSTER_NAME\\\") and contains(\\\"NodeInstanceRole\\\")) \\","  816    .RoleName\"","  817  kfctl delete -V -f kfctl_aws_cognito_1.2.0.yaml ","  818  source kf-install.sh","  819  cd ${KF_DIR}","  820  wget -O kfctl_aws.yaml $CONFIG_URI","  821  cd ${KF_DIR}","  822  kfctl apply -V -f ${CONFIG_FILE}","  823  kubectl get po -A","  824  watch kubectl get po -A","  825  kubectl get svc -n istio-system","  826  history | grep -i patch","  827  kubectl patch svc istio-ingressgateway -n istio-system -p '{\"spec\": {\"type\": \"LoadBalancer\"}}'","  828  kubectl get svc -n istio-system","  829  history | grep -i patch","  830  kubectl patch svc istio-ingressgateway -n istio-system -p '{\"spec\": {\"type\": \"NodePort\"}}'","  831  history | grep -i patch","  832  kubectl get pp","  833  kubectl get po -A","  834  kubectl get svc -n istio-system","  835  kubectl -n istio-system get svc","  836  kubectl -n istio-system get svc ","  837  kubectl -n istio-system edit svc istio-ingressgateway","  838  kubectl -n istio-system edit svc istio-ingressgateway -o yaml > temp.yaml","  839   kubectl -n istio-system edit svc istio-ingressgateway -o yaml","  840   kubectl -n istio-system get svc istio-ingressgateway -o yaml","  841   kubectl -n istio-system get svc istio-ingressgateway -o yaml > temp.yaml","  842   kubectl apply -f temp.yaml","  843  kubectl -n istio-system get svc","  844   kubectl apply -f temp.yaml","  845  kubectl -n istio-system get svc","  846   kubectl -n istio-system delete svc istio-ingressgateway ","  847   kubectl apply -f temp.yaml","  848   kubectl -n istio-system delete svc istio-ingressgateway ","  849   kubectl apply -f temp.yaml","  850  kubectl -n istio-system get svc","  851   kubectl -n istio-system delete svc istio-ingressgateway ","  852   kubectl apply -f temp.yaml","  853  kubectl -n istio-system get svc","  854   kubectl -n istio-system delete svc istio-ingressgateway ","  855  kubectl -n istio-system get svc","  856   kubectl apply -f temp.yaml","  857  kubectl -n istio-system get svc","  858   kubectl -n istio-system delete svc istio-ingressgateway ","  859  kubectl -n istio-system get svc","  860   kubectl apply -f temp.yaml","  861  kubectl -n istio-system get svc","  862   kubectl -n istio-system delete svc istio-ingressgateway ","  863  kubectl -n istio-system get svc","  864   kubectl apply -f istio-ingressgateway.yaml ","  865   kubectl -n istio-system delete svc istio-ingressgateway ","  866   kubectl apply -f istio-ingressgateway.yaml ","  867   kubectl apply -f temp.yaml ","  868   kubectl apply -f istio-ingressgateway.yaml ","  869   kubectl -n istio-system delete svc istio-ingressgateway ","  870   kubectl apply -f istio-ingressgateway.yaml ","  871   kubectl delete -f temp.yaml ","  872   kubectl delete -f istio-ingressgateway.yaml ","  873   kubectl apply -f istio-ingressgateway.yaml ","  874  kfctl apply -V -f kfctl_aws_cognito_1.2.0.yaml ","  875   kubectl apply -f istio-ingressgateway.yaml ","  876   kubectl delete -f temp.yaml ","  877   kubectl apply -f temp.yaml ","  878  kfctl delete -V -f kfctl_aws_cognito_1.2.0.yaml ","  879  kfctl apply -V -f kfctl_aws_cognito_1.2.0.yaml ","  880  kubectl get po -A","  881  ll","  882  bash redeploy-mpi-operator.sh ","  883  kubectl get po -A","  884  history | grep patch","  885  kubectl patch svc istio-ingressgateway -n istio-system -p '{\"spec\": {\"type\": \"LoadBalancer\"}}","  886  kubectl get svc -n istio-system","  887  ll","  888  kubectl delete -f istio-ingressgateway.yaml ","  889  kubectl get svc","  890  kubectl get po -A","  891  kubectl -n istio-system get svc","  892  kubectl apply -f istio-ingressgateway.yaml ","  893  kubectl -n istio-system get svc","  894  ll","  895  kubectl delete -f kfctl_aws_cognito_1.2.0.yaml ","  896  kfctl -V -f kfctl_aws_cognito_1.2.0.yaml ","  897  kfctl delete -V -f kfctl_aws_cognito_1.2.0.yaml ","  898  ll","  899  cat kf-install.sh ","  900  source kf-install.sh ","  901  cat kf-install.sh ","  902  history | grep wget","  903  wget -O kfctl_aws.yaml $CONFIG_URI","  904  sed -i '/region: us-west-2/ a \\      enablePodIamPolicy: true' ${CONFIG_FILE}","  905  sed -i -e 's/kubeflow-aws/'\"$AWS_CLUSTER_NAME\"'/' ${CONFIG_FILE}","  906  sed -i \"s@us-west-2@$AWS_REGION@\" ${CONFIG_FILE}","  907  sed -i \"s@roles:@#roles:@\" ${CONFIG_FILE}","  908  sed -i \"s@- eksctl-eksworkshop-eksctl-nodegroup-ng-a2-NodeInstanceRole-xxxxxxx@#- eksctl-eksworkshop-eksctl-nodegroup-ng-a2-NodeInstanceRole-xxxxxxx@\" ${CONFIG_FILE}","  909  kfctl apply -V -f kfctl_aws.yaml ","  910  cd ${KF_DIR}","  911  kfctl apply -V -f ${CONFIG_FILE}","  912  kubectl get po -A","  913  kfctl apply -V -f ${CONFIG_FILE}","  914  source kf-install.sh","  915  mkdir -p ${KF_DIR}","  916  cd ${KF_DIR}","  917  ll","  918  history | grep wget","  919  wget -O kfctl_aws_native.yaml $CONFIG_URI","  920  source kf-install.sh","  921  cd production/","  922  source kf-install.sh ","  923  wget -O kfctl_aws_native.yaml $CONFIG_URI","  924  kfctl apply -V -f kfctl_aws_cognito_1.2.0.yaml ","  925  kubectl get po -A","  926  ll","  927  bash mpi-operator.yaml ","  928  ll","  929  cat redeploy-mpi-operator.sh ","  930  bash redeploy-mpi-operator.sh ","  931  ll","  932  kubectl get svc -n istio-system","  933  kubectl -n istio-system get ing","  934  kubectl -n istio-system get ing istio-ingress","  935  kubectl -n istio-system get ing istio-ingress -o yaml","  936  kubectl -n istio-system get ing istio-ingress -o yamla > istio-ingress.yaml","  937  kubectl -n istio-system get ing istio-ingress -o yaml > istio-ingress.yaml","  938  kubectl -n istio-system delete -f istio-ingress.yaml ","  939  kubectl -n istio-system apply -f istio-ingress.yaml ","  940  kubectl -n istio-system get ing","  941  wget https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.2.0/docs/examples/2048/2048_full.yaml","  942  kubectl delete -f istio-ingress.yaml ","  943  kubectl apply -f istio-ingress.yaml ","  944  kubectl get ing -n istio-system","  945  kubectl apply -f 2048_full.yaml ","  946  kubectl get all -n game-2048 ","  947  kubectl get ing -n game-2048 ","  948  cd ..","  949  ll","  950  git clone https://github.com/jungfrau70/eks-fargate-project-6team.git","  951  cd eks-fargate-project-6team/","  952  ll","  953  cd ..","  954  ll","  955  mv eks-fargate-project-6team/ infra","  956  ll","  957  cd infra/","  958  ll","  959  rm 01_fargate-cluster/","  960  rm 02_kubeflow/","  961  ll","  962  rm -rf 01_fargate-cluster/ 02_kubeflow/","  963  ll","  964  cd 03_k8s-dashboard/","  965  ll","  966  cd ..","  967  ll","  968  cd 04_helm3/","  969  ll","  970  bash 1_deploy-helm3.sh ","  971  ll","  972  cd ..","  973  ll","  974  cd 05_alb-controller/","  975  ll","  976  kubectl get po -A","  977  kubectl get svc -A","  978  kubectl get ing -A","  979  kubectl get all -n kube-system","  980  kubectl get po -n kube-system","  981  kubectl get deploy -n kube-system","  982  ll","  983  cd ..","  984  ll","  985  cd infra/","  986  ll","  987  cd 05_alb-controller/","  988  ll","  989  cd prereqs/","  990  ll","  991  bash 1_check-prereqs.sh ","  992  bash 2_create-iam-oidc-provider.sh ","  993  ll","  994  cat 2_create-iam-oidc-provider.sh ","  995  ll","  996  ls -al","  997  touch .env","  998  bash 2_create-iam-oidc-provider.sh ","  999  ll"," 1000  ls -al"," 1001  cat 2_create-iam-oidc-provider.sh "," 1002  bash 2_create-iam-oidc-provider.sh "," 1003  cat 2_create-iam-oidc-provider.sh "," 1004  source .env"," 1005  cat $AWS_REGION"," 1006  echo $AWS_REGION"," 1007  ll"," 1008  bash 2_create-iam-oidc-provider.sh "," 1009  bash 3_create-iam-policy.sh "," 1010  ll"," 1011  cat 1_check-prereqs.sh "," 1012  bash 1_check-prereqs.sh "," 1013  bash 2_create-iam-oidc-provider.sh "," 1014  cat .env"," 1015  cat env"," 1016  ll"," 1017  ls -al"," 1018  cd .."," 1019  ls -al"," 1020  cat .env"," 1021  bash 1_deploy.sh "," 1022  ll"," 1023  bash 1_deploy.sh "," 1024  ll"," 1025  kubectl get po -A | grep alb"," 1026  ll"," 1027  clear"," 1028  cd .."," 1029  ll"," 1030  cd production/"," 1031  ll"," 1032  kubectl get ing -A"," 1033  cd .."," 1034  cd production/"," 1035  kubectl delete -f istio-ingress.yaml "," 1036  ll"," 1037  # List Service Accounts"," 1038  kubectl get sa -n kube-system"," 1039  # Create ClusterRole, ClusterRoleBinding & ServiceAccount"," 1040  kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/master/docs/examples/rbac-role.yaml"," 1041  # List Service Accounts"," 1042  kubectl get sa -n kube-system"," 1043  # Describe Service Account alb-ingress-controller "," 1044  kubectl describe sa alb-ingress-controller -n kube-system"," 1045  # NOT WORKING AS ON TODAY DUE TO ERRORS IN iam-policy.json "," 1046  # Create IAM Policy"," 1047  aws iam create-policy     --policy-name ALBIngressControllerIAMPolicy     --policy-document https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/master/docs/examples/iam-policy.json"," 1048  # Template"," 1049  eksctl create iamserviceaccount     --region region-code     --name alb-ingress-controller \\  #Note:  K8S Service Account Name that need to be bound to newly created IAM Role"," 1050      --namespace kube-system     --cluster prod     --attach-policy-arn arn:aws:iam::111122223333:policy/ALBIngressControllerIAMPolicy     --override-existing-serviceaccounts     --approve"," 1051  # Replaced region, name, cluster and policy arn (Policy arn we took note in step-03)"," 1052  eksctl create iamserviceaccount     --region us-east-1     --name alb-ingress-controller     --namespace kube-system     --cluster eksdemo1     --attach-policy-arn arn:aws:iam::180789647333:policy/ALBIngressControllerIAMPolicy     --override-existing-serviceaccounts     --approve"," 1053  ll"," 1054  cd .."," 1055  cd infra/"," 1056  ll"," 1057  cd 05_alb-controller/"," 1058  ll"," 1059  cat 0_monitor.sh "," 1060  cat .env"," 1061  vi .env"," 1062  cd .."," 1063  cd infra/"," 1064  ll"," 1065  cd 05_alb-controller/"," 1066  ll"," 1067  bash 0_monitor.sh "," 1068  cat 1_deploy.sh "," 1069  bash 1_deploy.sh "," 1070  ll"," 1071  cat 4_delete.sh "," 1072  bash 4_delete.sh "," 1073  helm ls"," 1074  bash 3_status.sh "," 1075  ll"," 1076  cd .."," 1077  ll"," 1078  cd .."," 1079  ll"," 1080  kubectl get po -A"," 1081  kubectl get ing -A"," 1082  kubectl delete ing ingress-2048 -n game-2048"," 1083  kubectl get ing -A"," 1084  ll"," 1085  cd production/"," 1086  dir"," 1087  ls -al"," 1088  cat istio-ingress.yaml "," 1089  kubectl apply -f istio-ingress.yaml "," 1090  ll"," 1091  kubectl get po -A | grep -i alb"," 1092  kubectl get po -A | more"," 1093  ll"," 1094  kubectl apply -f istio-ingress.yaml "," 1095  kubectl apply -f 2048_full.yaml "," 1096  ll"," 1097  kfctel delete -V -f kfctl_aws_cognito_1.2.0.yaml "," 1098  cd production/"," 1099  dir"," 1100  mv 05_alb-controller/ 01_alb-controller/"," 1101  cd 01_alb-controller/"," 1102  ll"," 1103  ls -al"," 1104  cat .env"," 1105  bash 1_deploy.sh "," 1106  bash 4_delete.sh "," 1107  cd production/01_alb-controller/"," 1108  bash 3_status.sh "," 1109  ll"," 1110  cat 1_deploy.sh '"," 1111  cat 1_deploy.sh"," 1112  kubectl -n kube-system get deploy"," 1113  kubectl -n kube-system describe deploy aws-load-balancer-controller"," 1114  history | grep scale"," 1115  eksctl scale nodegroup --cluster production --name $NODEGROUP_NAME --nodes 3 --nodes-max 3"," 1116  eksctl scale nodegroup --cluster production --name nodegroup --nodes 3 --nodes-max 3"," 1117  kubectl -n kube-system describe deploy aws-load-balancer-controller"," 1118  kfctl delete -V -f kfctl_aws_cognito_1.2.0.yaml "," 1119  bash 1_deploy.sh "," 1120  bash 4_delete.sh "," 1121  bash 1_deploy.sh "," 1122  bash 4_delete.sh "," 1123  kfctl apply -V -f kfctl_aws_cognito_1.2.0.yaml "," 1124  eksctl utils associate-iam-oidc-provider --region ap-northeast-2 --cluster production --approve"," 1125  curl -o iam_policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.2.0/docs/install/iam_policy.json"," 1126  aws iam create-policy --policy-name AWSLoadBalancerControllerIAMPolicy --policy-document file://iam_policy.json"," 1127  eksctl create iamserviceaccount --cluster=your-cluster --namespace=kube-system --name=aws-load-balancer-controller --attach-policy-arn=arn:aws:iam::YOUR_AWS_ACCOUNT_ID:policy/AWSLoadBalancerControllerIAMPolicy --override-existing-serviceaccounts --approve"," 1128  history"," 1129  ll"," 1130  bash 11_install.sh "," 1131  kubectl get po -A"," 1132  kubectl get po -A | grep -i alb"," 1133  ll"," 1134  rm 1_deploy.sh "," 1135  mv 11_install.sh 1_deploy.sh"," 1136  ll"," 1137  cat 3_status.sh "," 1138  bash 3_status.sh "," 1139  cat 3_status.sh "," 1140  rm 3_status.sh "," 1141  dir"," 1142  ll"," 1143  cat 0_monitor.sh "," 1144  bahs 0_monitor.sh "," 1145  bash 0_monitor.sh "," 1146  ll"," 1147  cat 4_delete.sh "," 1148  mv 1_deploy.sh 1_install.sh"," 1149  cp 1_install.sh 2_deploy.sh "," 1150  bash 2_deploy.sh "," 1151  kubectl -get po -A"," 1152  kubectl get po -A"," 1153  ll"," 1154  cat 4_delete.sh "," 1155  rm 4_delete.sh "," 1156  ll"," 1157  cat 2_deploy.sh "," 1158  cd.."," 1159  ll"," 1160  cd .."," 1161  ll"," 1162  mkdir 02_alb-demo"," 1163  ll"," 1164  mv 2048_full.yaml 02_alb-demo/"," 1165  ll"," 1166  cd 02_alb-demo/"," 1167  ll"," 1168  kubectl apply -f 2048_full.yaml "," 1169  kubectl get ing -A"," 1170  ll"," 1171  kubectl delete -f 2048_full.yaml "," 1172  ll"," 1173  cd .."," 1174  ll"," 1175  kubectl apply -f istio-ingress.yaml "," 1176  ll"," 1177  cat istio-ingressgateway.yaml "," 1178  ll"," 1179  kubectl get ing -n istio-system"," 1180  kubectl edit ing -n istio-system"," 1181  kubectl -n istio-system get ing"," 1182  kubectl -n istio-system get ing istio-ingress"," 1183  kubectl -n istio-system get ing istio-ingress -o yaml"," 1184  kubectl -n istio-system get ing istio-ingress -o yaml > temp.yaml"," 1185  k"," 1186  ll"," 1187  kubectl delete -f temp.yaml "," 1188  kubectl apply -f temp.yaml "," 1189  kubectl get ing -A"," 1190  kubectl -n istio-system get ing istio-ingress -o yaml > temp.yaml"," 1191  kubectl get ing -A"," 1192  kubectl -n istio-system get ing istio-ingress -o yaml > temp.yaml"," 1193  kubectl -n istio-system eidt ing istio-ingress "," 1194  kubectl -n istio-system edit ing istio-ingress "," 1195  kubectl get ing -A"," 1196  kubectl -n istio-system edit ing istio-ingress "," 1197  kubectl get ing -A"," 1198  kubectl get svc"," 1199  kubectl get svc -n istio-system"," 1200  ll"," 1201  bash redeploy-mpi-operator.sh "," 1202  ll"," 1203  kubectl get po -A | grep -i alb"," 1204  kubectl get po -n istio-system"," 1205  kubectl get po -n kubeflow"," 1206  kubectl -n istio-system delete ing istio-ingress "," 1207  kubectl apply -f temp.yaml "," 1208  kubectl get ing -n istio-system"," 1209  cd .."," 1210  mkdir 02_istio-ingress"," 1211  mv 01_alb-controller/istio-ingress.yaml 02_istio-ingress/"," 1212  ll"," 1213  mv 02_alb-demo/ 03_alb-demo/"," 1214  ll"," 1215  mv 02_istio-ingress/ 02_alb_istio-ingress/"," 1216  ll"," 1217  kubectl get ing -n istio-system"," 1218  ll"," 1219  cd .."," 1220  ll"," 1221  mkdir 04_kubeflow"," 1222  ll"," 1223  mv * 04_kubeflow/"," 1224  ll"," 1225  ls -al"," 1226  cd 04_kubeflow/"," 1227  ll"," 1228  cd production/"," 1229  ll"," 1230  mv 01_alb-controller/ ~/environment/"," 1231  mv 02_alb_istio-ingress/ ~/environment/"," 1232  mv 03_alb-demo/ ~/environment/"," 1233  ll"," 1234  cd .."," 1235  ll"," 1236  cd .."," 1237  ll"," 1238  cd .."," 1239  ll"," 1240  cd environment/"," 1241  ll"," 1242  cd 04_kubeflow/"," 1243  ll"," 1244  mv infra/ .."," 1245  ll"," 1246  cd .."," 1247  ll"," 1248  cd infra/"," 1249  ll"," 1250  helm ls"," 1251  mv 03_k8s-dashboard/ 05_k8s-dashboard/"," 1252  ll"," 1253  mv 05_k8s-dashboard/ .."," 1254  ll"," 1255  mv 08_postgresql-ha/ .."," 1256  ll"," 1257  mv 06_lma-efk/ .."," 1258  ll"," 1259  mv 04_helm3/ .."," 1260  ll"," 1261  cd .."," 1262  ll"," 1263  mv 06_lma-efk/ 07_lma-efk/"," 1264  ll"," 1265  mv 04_kubeflow/ 06_kubeflow/"," 1266  ll"," 1267  rm -rf infra/"," 1268  ll"," 1269  ls -al"," 1270  touch .gitignore"," 1271  ll"," 1272  kubectl get po -A"," 1273  ls -al"," 1274  find . -print | grep .git"," 1275  find . -print | grep .git | rm -rf "," 1276  find . -print | grep .git"," 1277  find . -print | grep \".git\""," 1278  rm -rf ./06_kubeflow/ecsdemo-nodejs/.git"," 1279  rm -rf ./06_kubeflow/production/.cache/"," 1280  find . -print | grep \".git\""," 1281  rm -rf ./06_kubeflow/ecsdemo-frontend/.git"," 1282  find . -print | grep \".git\""," 1283  rm -rf ./06_kubeflow/ecsdemo-frontend/.git ./06_kubeflow/ecsdemo-crystal/.git"," 1284  find . -print | grep \".git\""," 1285  rm -rf ./06_kubeflow/ecsdemo-crystal/.gitignore"," 1286  rm -rf ./06_kubeflow/ecsdemo-crystal/.gitignore ./06_kubeflow/ecsdemo-frontend/.gitignore ./06_kubeflow/ecsdemo-nodejs/.gitignore"," 1287  ll"," 1288  find . -print | grep \".git\""," 1289  ll"," 1290  git init"," 1291  git add ."," 1292  git commit -m \"first commit\""," 1293  git branch -M main"," 1294  git remote add origin https://github.com/jungfrau70/eks-kubeflow-team4.git"," 1295  git push -u origin main"," 1296  cd"," 1297  cd .ssh/"," 1298  ls -al"," 1299  cat id_rsa.pub "," 1300  cd -"," 1301  ll"," 1302  cd environment/"," 1303  ll"," 1304  git push -u origin main"," 1305  ls -al"," 1306  git push -u origin main"," 1307  ll"," 1308  tar cpzf eks-kubeflow-team4"," 1309  tar cpzf eks-kubeflow-team4 ."," 1310  ll"," 1311  rm eks-kubeflow-team4 "," 1312  dir"," 1313  ls -al"," 1314  sudo curl --silent --location -o /usr/local/bin/kubectl    https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/kubectl"," 1315  sudo chmod +x /usr/local/bin/kubectl"," 1316  kubectl"," 1317  exit"," 1318  ll"," 1319  cd 02_alb_istio-ingress/"," 1320  ll"," 1321  ls -al"," 1322  cd .."," 1323  \\cd 06_kubeflow/"," 1324  ll"," 1325  ls -al"," 1326  find - .env "," 1327  aws configure"," 1328  cd"," 1329  ll"," 1330  cd environment/"," 1331  set"," 1332  export | grep AWS"," 1333  echo $AWS_ACCOUNT"," 1334  ll"," 1335  cd 06_kubeflow/"," 1336  ll"," 1337  cd production/"," 1338  ls -al"," 1339  cd .."," 1340  ll"," 1341  cd .."," 1342  ls -al"," 1343  cd 01_alb-controller/"," 1344  ll"," 1345  ls -al"," 1346  cat .env"," 1347  cd .."," 1348  dir"," 1349  cd 02_alb_istio-ingress/"," 1350  ls -al"," 1351  cd .."," 1352  ll"," 1353  cd 03_alb-demo/"," 1354  ls -al"," 1355  cd .."," 1356  ls -al"," 1357  find . -print | grep env"," 1358  export"," 1359  set"," 1360  ll"," 1361  cd"," 1362  ll"," 1363  ls -al"," 1364  vi .profile "," 1365  cat .bash_profile "," 1366  aws configure"," 1367  cd environment/"," 1368  kubectl get nodes"," 1369  kubectl get node"," 1370  ll"," 1371  cd .."," 1372  ll"," 1373  cd environment/"," 1374  ls -al"," 1375  cd "," 1376  ls -al"," 1377  vi .bash_profile "," 1378  ll"," 1379  vi .bash_completion "," 1380  exit"," 1381  kubectl get nodes"," 1382  aws configure"," 1383  kubectl get nodes"," 1384  ll"," 1385  cd "," 1386  ls -al"," 1387  cd .aws/"," 1388  ll"," 1389  cd cre"," 1390  cat credentials "," 1391  rm credentials "," 1392  ll"," 1393  cat config "," 1394  exit"," 1395  kubectl get nodes"," 1396  ll"," 1397  pwd"," 1398  cd"," 1399  ls -al"," 1400  cd ~/.aws"," 1401  ll"," 1402  ls -al"," 1403  kubectl get nodes"," 1404  export | grep AWS"," 1405  aws sts get-caller-identity --query Arn "," 1406  kubectl get nodes"," 1407  cd .."," 1408  cd environment/"," 1409  ll"," 1410  cd 03_alb-demo/"," 1411  ll"," 1412  cd .."," 1413  cd 06_kubeflow/"," 1414  ll"," 1415  cd .."," 1416  ll"," 1417  cd 06_kubeflow/"," 1418  ll"," 1419  cat eksworkshop.yaml "," 1420  cd ~/environment"," 1421  git clone https://github.com/aws-containers/ecsdemo-frontend.git"," 1422  git clone https://github.com/brentley/ecsdemo-nodejs.git"," 1423  git clone https://github.com/brentley/ecsdemo-crystal.git"," 1424  aws kms create-alias --alias-name alias/eksworkshop --target-key-id $(aws kms create-key --query KeyMetadata.Arn --output text)"," 1425  export MASTER_ARN=$(aws kms describe-key --key-id alias/eksworkshop --query KeyMetadata.Arn --output text)"," 1426  echo \"export MASTER_ARN=${MASTER_ARN}\" | tee -a ~/.bash_profile"," 1427  cat << EOF > eksworkshop.yaml"," 1428  ---"," 1429  apiVersion: eksctl.io/v1alpha5"," 1430  kind: ClusterConfig"," 1431  metadata:"," 1432    name: eksworkshop-eksctl"," 1433    region: ${AWS_REGION}"," 1434    version: \"1.19\""," 1435  availabilityZones: [\"${AZS[0]}\", \"${AZS[1]}\", \"${AZS[2]}\"]"," 1436  managedNodeGroups:"," 1437  - name: nodegroup"," 1438    desiredCapacity: 3"," 1439    instanceType: t3.small"," 1440    ssh:"," 1441      enableSsm: true"," 1442  secretsEncryption:"," 1443    keyARN: ${MASTER_ARN}"," 1444  EOF"," 1445  ls -al"," 1446  kubectl get nodes"," 1447  cat eksworkshop.yaml "," 1448  kubectl get nodes"," 1449  history | grep scale"," 1450  cd prod"," 1451  ;;"," 1452  ll"," 1453  cd 06_kubeflow/"," 1454  ll"," 1455  cd production/"," 1456  cd .."," 1457  echo eksworkshop.yaml "," 1458  cat eksworkshop.yaml "," 1459  kubectl get nodes"," 1460  export"," 1461  export | grep STACK_NAME"," 1462  ll"," 1463  ls -al ~/.b*"," 1464  cat /home/ec2-user/.bash_completion"," 1465  ls -al ~/.b*"," 1466  kubectl describe configmap -n kube-system aws-auth"," 1467  export DASHBOARD_VERSION=\"v2.0.0\""," 1468  kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/${DASHBOARD_VERSION}/aio/deploy/recommended.yaml"," 1469  wget https://raw.githubusercontent.com/kubernetes/dashboard/${DASHBOARD_VERSION}/aio/deploy/recommended.yaml"," 1470  export DASHBOARD_VERSION=\"v2.0.0\""," 1471  kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/${DASHBOARD_VERSION}/aio/deploy/recommended.yaml"," 1472  kubectl proxy --port=8080 --address=0.0.0.0 --disable-filter=true &"," 1473  kubectl get all -n kubernetes-dashboard"," 1474  \\"," 1475  kubectl get all -n kubernates-dashboard"," 1476  kubectl get ing -n kubernetes-dashboard"," 1477  kubectl get all -n kubernetes-dashboard"," 1478  kubectl proxy --port=8080 --address=0.0.0.0 --disable-filter=true &"," 1479  kubectl proxy --port=8000 --address=0.0.0.0 --disable-filter=true &"," 1480  aws eks get-token --cluster-name eksworkshop-eksctl | jq -r '.status.token'"," 1481  # kill proxy"," 1482  pkill -f 'kubectl proxy --port=8080'"," 1483  # delete dashboard"," 1484  kubectl delete -f https://raw.githubusercontent.com/kubernetes/dashboard/${DASHBOARD_VERSION}/aio/deploy/recommended.yaml"," 1485  unset DASHBOARD_VERSION"," 1486  ll"," 1487  li"," 1488  cd ~/environment/ecsdemo-nodejs"," 1489  kubectl apply -f kubernetes/deployment.yaml"," 1490  kubectl apply -f kubernetes/service.yaml"," 1491  cd ~/environment/ecsdemo-nodejs"," 1492  kubectl apply -f kubernetes/deployment.yaml"," 1493  kubectl apply -f kubernetes/service.yaml"," 1494  kubectl get deployment ecsdemo-nodejs"," 1495  kubectl get deployment ecsdemo-nodejs"," 1496  cd ~/environment/ecsdemo-crystal"," 1497  kubectl apply -f kubernetes/deployment.yaml"," 1498  kubectl apply -f kubernetes/service.yaml"," 1499  cd ~/environment/ecsdemo-crystal"," 1500  kubectl apply -f kubernetes/deployment.yaml"," 1501  kubectl apply -f kubernetes/service.yaml"," 1502  kubectl get deployment ecsdemo-crystal"," 1503  kubectl get deployment ecsdemo-crystal"," 1504  aws iam get-role --role-name \"AWSServiceRoleForElasticLoadBalancing\" || aws iam create-service-linked-role --aws-service-name \"elasticloadbalancing.amazonaws.com\""," 1505  ELB=$(kubectl get service ecsdemo-frontend -o json | jq -r '.status.loadBalancer.ingress[].hostname')"," 1506  curl -m3 -v $ELB"," 1507  ELB=$(kubectl get service ecsdemo-frontend -o json | jq -r '.status.loadBalancer.ingress[].hostname')"," 1508  kubectl get service ecsdemo-frontend"," 1509  cd ~/environment/ecsdemo-frontend"," 1510  kubectl apply -f kubernetes/deployment.yaml"," 1511  kubectl apply -f kubernetes/service.yaml"," 1512  kubectl get deployment ecsdemo-frontend"," 1513  kubectl get service ecsdemo-frontend"," 1514  ELB=$(kubectl get service ecsdemo-frontend -o json | jq -r '.status.loadBalancer.ingress[].hostname')"," 1515  curl -m3 -v $ELB"," 1516  ll"," 1517  kubectl get po -A"," 1518  kubectl get ns"," 1519  kubectl get po -n inhwan-jung"," 1520  kubectl -n inhwan-jung describe po dev-0"," 1521  kubectl -n inhwan-jung logs dev-0"," 1522  kubectl -n inhwan-jung logs dev-0 dev"," 1523  cat << EOF > eksworkshop.yaml"," 1524  eksctl create cluster -f eksworkshop.yaml"," 1525  eksctl create cluster -f eksworkshop.yaml"," 1526  ll"," 1527  cd 08_postgresql-ha/"," 1528  ll"," 1529  bash 0_monitor.sh "," 1530  ls -al"," 1531  cat .env"," 1532  cat 0_monitor.sh "," 1533  cd .."," 1534  ll"," 1535  cd 08_postgresql-ha/"," 1536  ll"," 1537  cat 3_status.sh "," 1538  bash 3_status.sh "," 1539  helm ls"," 1540  ll"," 1541  cat 1_deploy.sh "," 1542  kubectl get ns"," 1543  helm version"," 1544  ll"," 1545  bash 1_deploy.sh "," 1546  ll"," 1547  bash 3_status.sh "," 1548  export POSTGRES_PASSWORD=$(kubectl get secret --namespace fitness fitness-postgresql-ha-postgresql -o jsonpath=\"{.data.postgresql-password}\" | base64 --decode)"," 1549  echo $POSTGRES_PASSWORD "," 1550  export REPMGR_PASSWORD=$(kubectl get secret --namespace fitness fitness-postgresql-ha-postgresql -o jsonpath=\"{.data.repmgr-password}\" | base64 --decode)"," 1551  kubectl run fitness-postgresql-ha-client --rm --tty -i --restart='Never' --namespace fitness --image docker.io/bitnami/postgresql-repmgr:11.13.0-debian-10-r40 --env=\"PGPASSWORD=$POSTGRES_PASSWORD\"          --command -- psql -h fitness-postgresql-ha-pgpool -p 5432 -U postgres -d postgres"," 1552  ls -al"," 1553  bash 0_monitor.sh "," 1554  history | grep scale"," 1555  eksctl scale nodegroup --cluster production --name nodegroup --nodes 1 --nodes-max 3"," 1556  kubectl get po -A"," 1557  watch kubectl get po -A"," 1558  ll"," 1559  cd 08_postgresql-ha/"," 1560  ll"," 1561  bash 4_delete.sh "," 1562  watch kubectl get po -A"," 1563   kubectl get po -A"," 1564  cd .."," 1565  ll"," 1566  mkdir 09_myapp"," 1567  mv ecs* 09_myapp/"," 1568  ll"," 1569  mv 09_myapp/ 09_fitness"," 1570  cd 09_fitness/"," 1571  ll"," 1572  cd ecsdemo-frontend/"," 1573  ll"," 1574  cat Dockerfile"," 1575  cd .."," 1576  ll"," 1577  rm -rf *"," 1578  ll"," 1579  yarn"," 1580  ll"," 1581  FROM node:lts-alpine"," 1582  # install simple http server for serving static content"," 1583  RUN npm install -g http-server"," 1584  # make the 'app' folder the current working directory"," 1585  WORKDIR /app"," 1586  # copy both 'package.json' and 'package-lock.json' (if available)"," 1587  COPY package*.json ./"," 1588  # install project dependencies"," 1589  RUN npm install"," 1590  # copy project files and folders to the current working directory (i.e. 'app' folder)"," 1591  COPY . ."," 1592  # build app for production with minification"," 1593  RUN npm run build"," 1594  EXPOSE 8080"," 1595  CMD [ \"http-server\", \"dist\" ]l"," 1596  ls -al"," 1597  touch Dockerfile"," 1598  ll"," 1599  git clone https://github.com/vuejs/vuejs.org.git"," 1600  mv vuejs.org/ app"," 1601  ll"," 1602  docker build -t open-vue:0.1 ."," 1603  ll"," 1604  rm -rf app"," 1605  ll"," 1606  npm"," 1607  git clone https://github.com/hanu-developer/docker-vuejs.git"," 1608  ls -al"," 1609  mv docker-vuejs/ app"," 1610  ll"," 1611  cd app/"," 1612  ll"," 1613  cd .."," 1614  ll"," 1615  cat Dockerfile "," 1616  ll"," 1617  docker build -t fitness-vue:0.1 ."," 1618  git clone https://github.com/jungfrau70/fitness-cognito.git"," 1619  ll"," 1620  mr -r fapp"," 1621  ll"," 1622  rm -rf app/"," 1623  cd .."," 1624  mv 09_fitness/ 09_fitness-cognito"," 1625  cd 09_fitness-cognito/"," 1626  ll"," 1627  mv fitness-cognito/ app"," 1628  ls -al"," 1629  cd app"," 1630  ll"," 1631  mr -rf ."," 1632  ll"," 1633  touch .env"," 1634  touch .env.local"," 1635  ll"," 1636  docker build -t fitness-vue:0.1 ."," 1637  cd .."," 1638  docker build -t fitness-vue:0.1 ."," 1639  cat   /root/.npm/_logs/2021-09-29T11_05_23_749Z-debug.log"," 1640  sudo cat   /root/.npm/_logs/2021-09-29T11_05_23_749Z-debug.log"," 1641  cd .."," 1642  ls -al"," 1643  cd 09_fitness-cognito/"," 1644  ll"," 1645  cd app"," 1646  ls -al"," 1647  mv .env .."," 1648  mv .env.local  .."," 1649  ll"," 1650  cd .."," 1651  ll"," 1652  cd app"," 1653  ll"," 1654  cd .."," 1655  ll"," 1656  mv app app-"," 1657  ll"," 1658  vue"," 1659  npm install -g @vue/cli"," 1660  npm update -g @vue/cli"," 1661  ll"," 1662  vue create app"," 1663  cd app"," 1664  ll"," 1665  cd .."," 1666  ll"," 1667  docker build -t fitness-frontend:0.1 ."," 1668  ll"," 1669  rm -rf app"," 1670  vue create app"," 1671  ll"," 1672  docker build -t fitness-frontend:0.1 ."," 1673  ll"," 1674  docker build -t fitness-frontend:0.1 ."," 1675  cd app"," 1676  npm install"," 1677  cd .."," 1678  ll"," 1679  cd app"," 1680  npm run build"," 1681  cd .."," 1682  docker build -t fitness-frontend:0.1 ."," 1683  npm --version"," 1684  docker build -t fitness-frontend:0.1 ."," 1685  node --version"," 1686  docker build -t fitness-frontend:0.1 ."," 1687  cd app"," 1688  ll"," 1689  npm run serve"," 1690  cd .."," 1691  docker build -t fitness-frontend:0.1 ."," 1692  docker build -t fitness-frontend:0.2 ."," 1693  docker run fitness-frontend:0.2"," 1694  docker run -rm fitness-frontend:0.2"," 1695  docker build -t jungfrau70/fitness-펴던:0.2 ."," 1696  docker build -t jungfrau70/fitness-vue:0.2 ."," 1697  docker run -it -p 8081:8080 -d --name fitness-vue jungfrau70/fitness-vue:0.2 "," 1698  docker ps"," 1699  docker image"," 1700  docker ps -a"," 1701  docker logs df38ea81ef66"," 1702  cd app"," 1703  ll"," 1704  cd src/"," 1705  ll"," 1706  cd .."," 1707  ls -al"," 1708  cd src/"," 1709  ll"," 1710  cd .."," 1711  ll"," 1712  history"," 1713  docker build -t jungfrau70/fitness-vue:0.3 ."," 1714  history"," 1715  docker run -it -p 8081:8080 -d --name fitness-vue jungfrau70/fitness-vue:0.3"," 1716  docker rm fitness-vue"," 1717  docker run -it -p 8081:8080 -d --name fitness-vue jungfrau70/fitness-vue:0.3"," 1718  docker ps"," 1719  docker ps -a"," 1720  docker logs  fitness-vue"," 1721  ll"," 1722  cd app"," 1723  ll"," 1724  cd .."," 1725  ll"," 1726  mv app app_new"," 1727  mv app-/ app"," 1728  ll"," 1729  docker build -t jungfrau70/fitness-vue:0.4 ."," 1730  docker run -it -p 8081:8080 -d --name fitness-vue jungfrau70/fitness-vue:0.4"," 1731  docker rm fitness-vue"," 1732  docker run -it -p 8081:8080 -d --name fitness-vue jungfrau70/fitness-vue:0.4"," 1733  docker ps"," 1734  docker logs  fitness-vue"," 1735  clear"," 1736  ll"," 1737  cd app"," 1738  cat .env"," 1739  cd .."," 1740  cd app_new/"," 1741  ll"," 1742  ls a-l"," 1743  ls -al"," 1744  cd .."," 1745  ls -al"," 1746  rm -rf app_new/"," 1747  mv .env* app/"," 1748  ll"," 1749  docker build -t jungfrau70/fitness-vue:0.5 ."," 1750  ll"," 1751  docker build -t jungfrau70/fitness-vue:0.5 ."," 1752  docker login"," 1753  docker build -t jungfrau70/fitness-vue:0.5 ."," 1754  docker rm fitness-vue"," 1755  docker run -it -p 8081:8080 -d --name fitness-vue jungfrau70/fitness-vue:0.5"," 1756  docker ps"," 1757  docker logs fitness-vue"," 1758  docker"," 1759  docker ps "," 1760  docker stop fitness-vue"," 1761  ;;"," 1762  ll"," 1763  docker build -t jungfrau70/fitness-vue:0.6 ."," 1764  docker build -t jungfrau70/fitness-vue:0.7 ."," 1765  docker rm fitness-vue"," 1766  docker run -it -p 8081:8080 -d --name fitness-vue jungfrau70/fitness-vue:0.7"," 1767  docker ps"," 1768  docker logs fitness-vue"," 1769  cul localhost:8080"," 1770  curl localhost:8080"," 1771  curl localhost:8081"," 1772  docker stop fitness-vue"," 1773  docker rm fitness-vue"," 1774  docker run -it -p 8080:8080 -d --name fitness-vue jungfrau70/fitness-vue:0.7"," 1775  docker logs fitness-vue"," 1776  curl localhost:8080"," 1777  docker ps"," 1778  docker logs fitness-vue"," 1779  curl localhost:8080"," 1780   docker login --username engineer --password-stdin 596906176357.dkr.ecr.ap-northeast-2.amazonaws.com"," 1781   docker login 596906176357.dkr.ecr.ap-northeast-2.amazonaws.com"," 1782  aws ecr get-login-password --region ap-northeast-2 | docker login --username engineer --password-stdin 596906176357.dkr.ecr.region.amazonaws.com"," 1783  aws ecr get-login-password --region ap-northeast-2"," 1784  aws ecr get-login-password --region ap-northeast-2 | docker login --username engineer --password-stdin 596906176357.dkr.ecr.ap-northeast-2.amazonaws.com"," 1785  aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 596906176357.dkr.ecr.ap-northeast-2.amazonaws.com"," 1786  history"," 1787  aws ecr create-repository     --repository-name hello-world     --image-scanning-configuration scanOnPush=true \\"," 1788  aws ecr create-repository     --repository-name fitness     --image-scanning-configuration scanOnPush=true     --region ap-northeast-2"," 1789  docker images"," 1790  docker tag fitness-vue:latest 596906176357.dkr.ecr.ap-northeast-2.amazonaws.com"," 1791  docker tag fitness-vue:latest jungfrau70/fitness-vue:0.7"," 1792  docker tag -h"," 1793  docker tag jungfrau70/fitness-vue:0.7 596906176357.dkr.ecr.ap-northeast-2.amazonaws.com/fitness-vue:0.7"," 1794  docker push 596906176357.dkr.ecr.ap-northeast-2.amazonaws.com/fitness-vue:0.7"," 1795  aws ecr create-repository     --repository-name fitness-vue     --image-scanning-configuration scanOnPush=true     --region ap-northeast-2"," 1796  docker push 596906176357.dkr.ecr.ap-northeast-2.amazonaws.com/fitness-vue:0.7"," 1797  aws ecr batch-delete-image       --repository-name fitness-vue       --image-ids imageTag=0.7"," 1798  aws ecr delete-repository       --repository-name fitness       --force"," 1799  docker push 596906176357.dkr.ecr.ap-northeast-2.amazonaws.com/fitness-vue:0.7"," 1800  aws ecr delete-repository       --repository-name fitness       --force"," 1801  ll"," 1802  cd 09_fitness-cognito/"," 1803  dir"," 1804  docker build -t fitness-vue:0.1 ."," 1805  ll"," 1806  docker build -t fitness-vue:0.1 ."," 1807  docker stop fitness-vue"," 1808  docker rm fitness-vue"," 1809  docker run –it –p 8080:8080 –rm –name fitness-vue fitness-vue:0.1"," 1810  docker build -t fitness-vue:0.1 ."," 1811  docker run –it –p 8080:8080 –rm –name fitness-vue fitness-vue:0.1"," 1812  docker run –it –p 8080:8080 –rm -–name fitness-vue fitness-vue:0.1"," 1813  docker run –it –p 8080:8080 -–rm -–name fitness-vue fitness-vue:0.1"," 1814  docker run -it -p 8080:8080 --rm --name fitness-vue fitness-vue:0.1"," 1815  docker tag fitness-vue:0.1 596906176357.dkr.ecr.ap-northeast-2.amazonaws.com/fitness-vue:0.7"," 1816  docker tag fitness-vue:0.1 596906176357.dkr.ecr.ap-northeast-2.amazonaws.com/fitness-vue:0.1"," 1817  docker push 596906176357.dkr.ecr.ap-northeast-2.amazonaws.com/fitness-vue:0.1"," 1818  aws ecr batch-delete-image       --repository-name fitness-vue       --image-ids imageTag=0.7"," 1819  ll"," 1820  kubectl apply -f deployment.yaml "," 1821  kubectl get ns"," 1822  kubectl create ns fitness"," 1823  kubectl apply -f deployment.yaml "," 1824  kubectl get po -n fitness"," 1825  kubectl describe po fitness-vue-84b9c5b56d-nh46q -n fitness"," 1826  history | grep scale"," 1827  eksctl scale nodegroup --cluster production --name nodegroup --nodes 2 --nodes-max 3"," 1828  kubectl get po -n fitness"," 1829  kubectl get po -A"," 1830  cd .."," 1831  ll"," 1832  cd 05_k8s-dashboard/"," 1833  ll"," 1834  cat 2_deploy-k8s-dashboard.sh "," 1835  ll"," 1836  cat 2_deploy-k8s-dashboard.sh "," 1837  ll"," 1838  cat 2_deploy-k8s-dashboard.sh "," 1839  cp 2_deploy-k8s-dashboard.sh 4_delete-k8s-dashboard.sh "," 1840  vi 4_"," 1841  mv 4_get-login-token.sh 5_get-login-token.sh "," 1842  ll"," 1843  vi 4_delete-k8s-dashboard.sh "," 1844  bash 4_delete-k8s-dashboard.sh "," 1845  ll"," 1846  cd .."," 1847  ll"," 1848  kubectl get po -A"," 1849  ll"," 1850  kubectl delete all --all -n default"," 1851  kubectl get po -A"," 1852  kubectl delete all --all -n anomyous"," 1853  ll"," 1854  cd 09_fitness-cognito/"," 1855  ll"," 1856  kubectl apply -f service.yaml "," 1857  kubectl get svc -A"," 1858  kubectl delete -f deployment.yaml "," 1859  kubectl get svc -A"," 1860  ll"," 1861  docker build -t fitness-vue:0.1 ."," 1862  docker build -t fitness-vue:0.2 ."," 1863  docker ps"," 1864  docker tag fitness-vue:0.2 596906176357.dkr.ecr.ap-northeast-2.amazonaws.com/fitness-vue:0.2"," 1865  docker push 596906176357.dkr.ecr.ap-northeast-2.amazonaws.com/fitness-vue:0.2"," 1866  aws ecr batch-delete-image       --repository-name fitness-vue       --image-ids imageTag=0.1"," 1867  ll"," 1868  kubectl apply -f deployment.yaml "," 1869  kubectl get po -A"," 1870  kubectl -n kubeflow describe po katib-db-manager-6c88c68d79-9mcnr"," 1871  ll"," 1872  kubectl get po -A"," 1873  kubectl get po -n fitness"," 1874  kubectl -n fitness logs  fitness-vue-68674b47bf-4fhbm"," 1875  kubectl -n fitness logs -f fitness-vue-68674b47bf-4fhbm"," 1876  kubectl delete -f service.yaml "," 1877  ll"," 1878  cd .."," 1879  ll"," 1880  cd 06_kubeflow/"," 1881  ll"," 1882  rm -rf ecsdemo-*"," 1883  ll"," 1884  cd production/"," 1885  ll"," 1886  cat istio-ingress.yaml "," 1887  cp istio-ingress.yaml ../../09_fitness-cognito/"," 1888  cd ../../09_fitness-cognito/"," 1889  ll"," 1890  mv istio-ingress.yaml  ingress.yaml"," 1891  ll"," 1892  kubectl -n istio-system get ing"," 1893  kubectl -n istio-system get ing istio-ingress -o yaml > ingress.yaml"," 1894  kubetl -n fitness get svc"," 1895  kubectl -n fitness get svc"," 1896  kubectl apply -f service.yaml "," 1897  kubectl -n fitness get svc"," 1898  kubectl -n fitness get svc -o yaml"," 1899  kubectl apply -f ingress.yaml "," 1900  kubectl get ing -A"," 1901  cat ingress.yaml "," 1902  kubectl delete all --all -n anonymous"," 1903  ll"," 1904  kubectl delete -f ingress.yaml "," 1905  kubectl apply -f ingress.yaml "," 1906  ㅊㅇ .."," 1907  cd .."," 1908  ll"," 1909  cd 06_kubeflow/"," 1910  ll"," 1911  cd production/"," 1912  ll"," 1913  kfctl delete -f kfctl_aws_cognito_1.2.0.yaml "," 1914  kfctl delete -V -f kfctl_aws_cognito_1.2.0.yaml "," 1915  kfctl apply -V -f kfctl_aws_cognito_1.2.0.yaml "," 1916  kfctl delete -V -f kfctl_aws_cognito_1.2.0.yaml "," 1917  ll"," 1918  kubectl get ns"," 1919  ll"," 1920  kfctl delete -V -f kfctl_aws.yaml "," 1921  ll"," 1922  kubectl delete -f istio-ingress.yaml "," 1923  ㅊㅇ"," 1924  ll"," 1925  cd 09_fitness-cognito/"," 1926  ll"," 1927  kubectl apply -f ingress.yaml "," 1928  kubectl get po -A"," 1929  kubectl get ing -A"," 1930  kubectl delete -f ingress.yaml "," 1931  kubectl apply -f ingress.yaml "," 1932  kubectl delete all --all -n kubeflow"," 1933  ll"," 1934  kfctl delete -V -f kfctl_aws_cognito_1.2.0.yaml "," 1935  ll"," 1936  kubectl get po -A"," 1937  watch kubectl get ing -A"," 1938  kubectl delete all --all -n knative-serving"," 1939  kubectl delete -f ingress.yaml "," 1940  kubectl get svc -n fitness"," 1941  cd 09_fitness-cognito/"," 1942  kubectl apply -f ingress.yaml "," 1943  kubectl -n fitness get ing"," 1944  watch kubectl -n fitness get ing"," 1945   kubectl -n fitness get ing"," 1946   kubectl -n fitness describe ing fitness-ingress"," 1947  kubectl delete -f ingress.yaml "," 1948  kubectl apply -f ingress.yaml "," 1949   kubectl -n fitness describe ing fitness-ingress"," 1950  kubectl get ing -A"," 1951  kubectl get po -A"," 1952  kubectl get ing,svc,ep"," 1953  kubectl get ing,svc,ep -n fitness"," 1954  kubectl delete all --all -n istio-system"," 1955  kubectl apply -f ingress.yaml "," 1956   kubectl -n fitness get ing"," 1957  kubectl delete -f ingress.yaml "," 1958  kubectl get po -A"," 1959  kubectl apply -f ingress.yaml "," 1960   kubectl -n fitness get ing,svc,ep"," 1961  kubectl delete all --all -n anonymous"," 1962   kubectl -n fitness get po"," 1963   kubectl -n fitness logs -f fitness-vue-68674b47bf-4fhbm"," 1964  ll"," 1965  kubectl delete -f deployment.yaml "," 1966   kubectl -n fitness get ing,svc,ep"," 1967  kubectl -n fitness get po"," 1968  kubectl apply -f deployment.yaml "," 1969  kubectl -n fitness get po"," 1970  kubectl -n fitness get ing,svc,deploy,po,ep"," 1971  kubectl delete -f deployment.yaml "," 1972  kubectl get deploy -A"," 1973  kubectl delete -f fitness"," 1974  kubectl delete -f fitness-vue -n fitness"," 1975  kubectl delete deploy fitness-vue -n fitness"," 1976  kubectl delete -f service.yaml "," 1977  kubectl delete all --all -n inhwan-jung"," 1978  kubectl delete all --all -n hyerihello"," 1979  kubectl get po -A"," 1980  kubectl delete -f ingress.yaml "," 1981  kubectl -n fitness get ing,svc,deploy,po,ep"," 1982  kubectl delete all --all -n bomme"," 1983  kubectl delete all --all -n cert-manager"," 1984  history | grep scale"," 1985  kubectl get po -A"," 1986  kubectl get po -A -o wide"," 1987  eksctl scale nodegroup --cluster production --name nodegroup --nodes 1 --nodes-max 3"," 1988  kubectl get nodes"," 1989  kubectl delete -f ingress.yaml "," 1990  ll"," 1991  kubectl apply -f deployment.yaml "," 1992  kubectl apply -f service.yaml "," 1993  kubectl apply -f ingress.yaml "," 1994  kubectl -n fitness get ing,svc,deploy,po,ep"," 1995  kubectl -n fitness logs pod/fitness-59cf4f7668-f6hpd"," 1996  kubectl -n fitness logs pod/fitness-59cf4f7668-vp5z9"," 1997  kubectl get po "," 1998  kubectl get svc"," 1999  kubectl get svc -A"," 2000  kubectl get ung"," 2001  kubectl get ing -A"," 2002  ll"," 2003  cd 09_fitness-cognito/"," 2004  ll"," 2005  git init ."," 2006  git config --global init.defaultBranch jungfrau70"," 2007  git branch -m Main"," 2008  ll"," 2009  git add ."," 2010  ls -al"," 2011  git commit -m \"2nd commit\""," 2012  git remote show"," 2013  git remote add origin https://github.com/jungfrau70/fitness-cognito.git"," 2014  branch"," 2015  git config --global user.name \"InHwan Jung\""," 2016  git config --global user.email inhwan.jung@gmail.com"," 2017  git branch -m main"," 2018  ll"," 2019  git push origin main"," 2020  cat ~/.ssh/id_rsa.pub "," 2021  git push origin main"," 2022  git remote rm origin"," 2023  git remote add remote git@github.com:jungfrau70/fitness-cognito.git"," 2024  git remote show origin"," 2025  git remote show"," 2026  git remote rm remote"," 2027  git remote add origin git@github.com:jungfrau70/fitness-cognito.git"," 2028  git remote show"," 2029  git remote show origin"," 2030  git push origin main"," 2031  git branch -h"," 2032  git branch -M cloud9"," 2033  ll"," 2034  git checkout main"," 2035  git branch -M main"," 2036  git branch"," 2037  git branch -m cloud9"," 2038  git branch"," 2039  git branch -M main"," 2040  git branch"," 2041  git branch -h"," 2042  git branch -c cloud9"," 2043  git branch"," 2044  git checkout cloud9"," 2045  ll"," 2046  git checkout main"," 2047  git pull"," 2048  ll"," 2049  ls -al"," 2050  ll"," 2051  git push origin main"," 2052  git push origin main -f"," 2053  cat .env.lo"," 2054  cat .env.local"," 2055  cd app/"," 2056  cat .env.local"," 2057  ll"," 2058  eksctl delete -f eksworkshop.yaml "," 2059  eksctl delete nodegroup -f eksworkshop.yaml "," 2060  eksctl delete cluster -f eksworkshop.yaml "," 2061  cat eksworkshop.yaml "," 2062  ls -al"," 2063  npm"," 2064  vue"," 2065  clear"," 2066  vue create vue-camera"," 2067  cd vue-camera/"," 2068  npm run serve"," 2069  npm install --save vue-picture-swipe"," 2070  npm audit fix"," 2071  npm run serve"," 2072  ll"," 2073  cat babel.config.js "," 2074  cat package.json "," 2075  npm run serve"," 2076  eksctl delete cluster -f eksworkshop.yaml "," 2077  npm install"," 2078  webpack-dev-server --disable-host-check"," 2079  npm install"," 2080  npm run serve"," 2081  ll"," 2082  cd .."," 2083  rm -rf vue-camera"," 2084  dir"," 2085  ls -al"," 2086  history"," 2087  ll"," 2088  cd 06_kubeflow/"," 2089  ll"," 2090  mv eksworkshop.yaml  .."," 2091  vue create vue-camera"," 2092  cd .."," 2093  ll"," 2094  mkdir 01_k8s"," 2095  mv eksworkshop.yaml eksworkshop.yaml "," 2096  mv eksworkshop.yaml 01_k8s/"," 2097  ls -al"," 2098  mv 01_k8s/ 00_k8s"," 2099  cd 00_k8s/"," 2100  ll"," 2101  eksctl delete nodegroup nodegroup"," 2102  eksctl delete nodegroup nodegroup --cluster production"," 2103  eksctl delete cluster -f eksworkshop.yaml "," 2104  eksctl delete fargateprofile -f eksworkshop.yaml "," 2105  cat eksworkshop.yaml "," 2106  eksctl delete fargateprofile serverless --cluster production"," 2107  eksctl delete cluster production -f eksworkshop.yaml "," 2108  cd vue-camera/"," 2109  ls -al"," 2110  cd src/"," 2111  ll"," 2112  cd .."," 2113  eksctl delete cluster production "," 2114  dir"," 2115  npm install"," 2116  ls"," 2117  ls -al"," 2118  npm run serve"," 2119  ll"," 2120  cd .."," 2121  rm -rf vue-camera/"," 2122  ls -al"," 2123  yarn"," 2124  yum"," 2125  yun install yarn"," 2126  npm install yarn"," 2127  yarn"," 2128  sudo apt-get update"," 2129  yum update"," 2130  sudo npm install yarn -g"," 2131  yarn"," 2132  history"," 2133  vue create vue-camere"," 2134  vue create vue-camera"," 2135  ls -al"," 2136  cd 09_fitness-cognito/"," 2137  ls -al"," 2138  cd .."," 2139  ll"," 2140  mv 09_fitness-cognito/ 09_vue-camera"," 2141  ls -al"," 2142  cd 09_vue-camera/"," 2143  ls -al"," 2144  mv Camera.vue  app/src/components/"," 2145  ls -al"," 2146  cd app/"," 2147  ls -al"," 2148  cat babel.config.js "," 2149  ls -al"," 2150  npm run serve"," 2151  ls -al"," 2152  npm install"," 2153  npm install --save vue-picture-swipe"," 2154  npm install"," 2155  npm run serve"," 2156  npm install"," 2157  npm run serve"," 2158  mkdir darknet"," 2159  wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.weights"," 2160  docker buidl ."," 2161  docker build ."," 2162  ls -al"," 2163  mv yolov4.weights  darknet/"," 2164  cd darknet/"," 2165  docker build ."," 2166  xhost +"," 2167  ls -al"," 2168  hostname"," 2169  cp -p /etc/ssh/ssh_config /etc/ssh/ssh_config.original"," 2170  sudo cp -p /etc/ssh/ssh_config /etc/ssh/ssh_config.original"," 2171  sudo vim /etc/ssh/ssh_config"," 2172  sudo systemctl restart sshd"," 2173  host +"," 2174  docker run --name yolo -it -e DISPLAY=$DISPLAY -v /tmp/.X11-unix/:/tmp/.X11-unix --gpus all --rm yolo:0.1"," 2175  docker"," 2176  docker build"," 2177  docker build ."," 2178  ll"," 2179  docker build ."," 2180  ll"," 2181  mv yolov4.weights  .."," 2182  cd .."," 2183  rm -rf darknet/"," 2184  git clone https://github.com/ultralytics/yolov5.git"," 2185  cd yolov5/"," 2186  ls -al"," 2187  xhost"," 2188  pip install dockerx"," 2189  dockerx"," 2190  docker build ."," 2191  python dockerx"," 2192  find / -print | grep -i dockerx"," 2193  python dockerx"," 2194  ls -al"," 2195  df -k"," 2196  docker build ."," 2197  ll"," 2198  dir"," 2199  cd 00_k8s/"," 2200  ls -al"," 2201  eksctl create -f eksworkshop.yaml "," 2202  eksctl create cluster -f eksworkshop.yaml "," 2203  eksctl delete cluster -f eksworkshop.yaml "," 2204  eksctl delete cluster production"," 2205  ll"," 2206  cd 00_k8s/"," 2207  dir"," 2208  eksctl create cluster -f eksworkshop.yaml "," 2209  ls -al"," 2210  kubectl get nodes"," 2211  cd 01_alb-controller/"," 2212  ls -al"," 2213  cat iam_policy.json "," 2214  ll"," 2215  ls -al"," 2216  bash 1_install.sh "," 2217  ls -al"," 2218  cd .."," 2219  ls -al"," 2220  cd 02_alb_istio-ingress/"," 2221  ls -al"," 2222  catt istio-ingress.yaml "," 2223  cat istio-ingress.yaml "," 2224  ll"," 2225  ls -al"," 2226  cd .."," 2227  ll"," 2228  cd 03_alb-demo/"," 2229  ls -al"," 2230  cat 2048_full.yaml "," 2231  ll"," 2232  cd .."," 2233  ll"," 2234  mv 02_alb_istio-ingress/ 12_alb_istio-ingress/"," 2235  ll"," 2236  mv 03_alb-demo/ 13_alb-demo/"," 2237  ll"," 2238  ls -al"," 2239  cd 04_helm3/"," 2240  ll"," 2241  bash 1_deploy-helm3.sh "," 2242  ll"," 2243  cd .."," 2244  ls -al"," 2245  helm ls"," 2246  mv 04_helm3/ 02_helm3/"," 2247  ls -al"," 2248  mv 05_k8s-dashboard/ 15_k8s-dashboard/"," 2249  ls -al"," 2250  mv 07_lma-efk/ 17_lma-efk/"," 2251  ls -al"," 2252  mv 08_postgresql-ha/ 18_postgresql-ha/"," 2253  mv 09_vue-camera/ 19_vue-camera/"," 2254  ls -al"," 2255  mkdir others"," 2256  mv 1* others/"," 2257  ls -al"," 2258  mv 06_kubeflow/ 03_kubeflow/"," 2259  ls -al"," 2260  cd 03_kubeflow/"," 2261  ls -al"," 2262  yum install tmux"," 2263  pip install tmux"," 2264  apt-get install tumx"," 2265  apt-get install tmux"," 2266  yum install tmux"," 2267  sudo yum install tmux"," 2268  tmux"," 2269  ls -al"," 2270  mv inference_client.py .."," 2271  mv mnist-* .."," 2272  ll"," 2273  catt temp.yaml "," 2274  cat temp.yaml "," 2275  exit"," 2276  ls -al"," 2277  git clone https://github.com/jungfrau70/OpenCV-yolo-stream.git"," 2278  ls -al"," 2279  mkdir 04_opencv-yolo-stream "," 2280  ls -al"," 2281  mv OpenCV-yolo-stream/ code"," 2282  mv code 04_opencv-yolo-stream/"," 2283  ll"," 2284  mv *.yaml 04_opencv-yolo-stream/"," 2285  mv yolov4.weights 04_opencv-yolo-stream/"," 2286  ll"," 2287  mv inference_client.py  04_opencv-yolo-stream/"," 2288  ll"," 2289  cd 04_opencv-yolo-stream/"," 2290  ll"," 2291  cd code/"," 2292  ll"," 2293  mv Dockerfile  .."," 2294  cd .."," 2295  ll"," 2296  cd .."," 2297  ll"," 2298  cd yolov5/"," 2299  ll"," 2300  cd .."," 2301  ll"," 2302  cd 03_kubeflow/"," 2303  ll"," 2304  cat README.md "," 2305  ll"," 2306  cd production/"," 2307  ll"," 2308  cd .."," 2309  kubectl get po -A"," 2310  cd .."," 2311  ll"," 2312  mv 03_kubeflow/ 13_kubeflow/"," 2313  ll"," 2314  mv 13_kubeflow/ others/"," 2315  ll"," 2316  cd 04_opencv-yolo-stream/"," 2317  ll"," 2318  cd .."," 2319  ll"," 2320  mv 04_opencv-yolo-stream/ 03_opencv-yolo-stream/"," 2321  ls -al"," 2322  exit"],"id":2},{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["",""]}]]},"ace":{"folds":[],"scrolltop":300,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":24,"state":"start","mode":"ace/mode/text"}},"timestamp":1633617972210,"hash":"0823c3f3a8a68c8afcf6bbf1c37e9b6e07dbf0ab"}